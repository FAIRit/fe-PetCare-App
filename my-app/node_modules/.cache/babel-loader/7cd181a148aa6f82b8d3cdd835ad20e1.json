{"ast":null,"code":"var _jsxFileName = \"/home/natalia/Desktop/fe-PetCare-App/fe-PetCare-App/my-app/src/components/Calendar/Calendar.js\";\nimport React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction'; // needed for dayClick\n\nimport './main.scss';\nexport default class DemoApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.calendarComponentRef = React.createRef();\n    this.state = {\n      calendarWeekends: true,\n      calendarEvents: [// initial event data\n      {\n        title: 'Event Now',\n        start: new Date()\n      }]\n    };\n\n    this.toggleWeekends = () => {\n      this.setState({\n        // update a property\n        calendarWeekends: !this.state.calendarWeekends\n      });\n    };\n\n    this.gotoPast = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.gotoDate('2000-01-01'); // call a method on the Calendar object\n    };\n\n    this.handleDateClick = arg => {\n      if (confirm('Would you like to add an event to ' + arg.dateStr + ' ?')) {\n        this.setState({\n          // add new event data\n          calendarEvents: this.state.calendarEvents.concat({\n            // creates a new array\n            title: 'New Event',\n            start: arg.date,\n            allDay: arg.allDay\n          })\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleWeekends,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, \"toggle weekends\"), \"\\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.gotoPast,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, \"go to a date in the past\"), \"\\xA0 (also, click a date/time to add an event)\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app-calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      defaultView: \"dayGridMonth\",\n      header: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n      },\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends,\n      events: this.state.calendarEvents,\n      dateClick: this.handleDateClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/natalia/Desktop/fe-PetCare-App/fe-PetCare-App/my-app/src/components/Calendar/Calendar.js"],"names":["React","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","DemoApp","Component","calendarComponentRef","createRef","state","calendarWeekends","calendarEvents","title","start","Date","toggleWeekends","setState","gotoPast","calendarApi","current","getApi","gotoDate","handleDateClick","arg","confirm","dateStr","concat","date","allDay","render","left","center","right"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B,C,CAA0D;;AAE1D,OAAO,aAAP;AAEA,eAAe,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEnDC,oBAFmD,GAE5BP,KAAK,CAACQ,SAAN,EAF4B;AAAA,SAGnDC,KAHmD,GAG3C;AACNC,MAAAA,gBAAgB,EAAE,IADZ;AAENC,MAAAA,cAAc,EAAE,CAAE;AAChB;AAAEC,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE,IAAIC,IAAJ;AAA7B,OADc;AAFV,KAH2C;;AAAA,SAqCnDC,cArCmD,GAqClC,MAAM;AACrB,WAAKC,QAAL,CAAc;AAAE;AACdN,QAAAA,gBAAgB,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADlB,OAAd;AAGD,KAzCkD;;AAAA,SA2CnDO,QA3CmD,GA2CxC,MAAM;AACf,UAAIC,WAAW,GAAG,KAAKX,oBAAL,CAA0BY,OAA1B,CAAkCC,MAAlC,EAAlB;AACAF,MAAAA,WAAW,CAACG,QAAZ,CAAqB,YAArB,EAFe,CAEoB;AACpC,KA9CkD;;AAAA,SAgDnDC,eAhDmD,GAgDhCC,GAAD,IAAS;AACzB,UAAIC,OAAO,CAAC,uCAAuCD,GAAG,CAACE,OAA3C,GAAqD,IAAtD,CAAX,EAAwE;AACtE,aAAKT,QAAL,CAAc;AAAG;AACfL,UAAAA,cAAc,EAAE,KAAKF,KAAL,CAAWE,cAAX,CAA0Be,MAA1B,CAAiC;AAAE;AACjDd,YAAAA,KAAK,EAAE,WADwC;AAE/CC,YAAAA,KAAK,EAAEU,GAAG,CAACI,IAFoC;AAG/CC,YAAAA,MAAM,EAAEL,GAAG,CAACK;AAHmC,WAAjC;AADJ,SAAd;AAOD;AACF,KA1DkD;AAAA;;AAUnDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAG,KAAKd,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,uBAEE;AAAQ,MAAA,OAAO,EAAG,KAAKE,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,mDADF,eAME;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAC,cADd;AAEE,MAAA,MAAM,EAAE;AACNa,QAAAA,IAAI,EAAE,iBADA;AAENC,QAAAA,MAAM,EAAE,OAFF;AAGNC,QAAAA,KAAK,EAAE;AAHD,OAFV;AAOE,MAAA,OAAO,EAAE,CAAE9B,aAAF,EAAiBC,cAAjB,EAAiCC,iBAAjC,CAPX;AAQE,MAAA,GAAG,EAAG,KAAKG,oBARb;AASE,MAAA,QAAQ,EAAG,KAAKE,KAAL,CAAWC,gBATxB;AAUE,MAAA,MAAM,EAAG,KAAKD,KAAL,CAAWE,cAVtB;AAWE,MAAA,SAAS,EAAG,KAAKW,eAXnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,CADF;AAwBD;;AAnCkD","sourcesContent":["import React from 'react'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction' // needed for dayClick\n\nimport './main.scss'\n\nexport default class DemoApp extends React.Component {\n\n  calendarComponentRef = React.createRef()\n  state = {\n    calendarWeekends: true,\n    calendarEvents: [ // initial event data\n      { title: 'Event Now', start: new Date() }\n    ]\n  }\n\n  render() {\n    return (\n      <div className='demo-app'>\n        <div className='demo-app-top'>\n          <button onClick={ this.toggleWeekends }>toggle weekends</button>&nbsp;\n          <button onClick={ this.gotoPast }>go to a date in the past</button>&nbsp;\n          (also, click a date/time to add an event)\n        </div>\n        <div className='demo-app-calendar'>\n          <FullCalendar\n            defaultView=\"dayGridMonth\"\n            header={{\n              left: 'prev,next today',\n              center: 'title',\n              right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n            }}\n            plugins={[ dayGridPlugin, timeGridPlugin, interactionPlugin ]}\n            ref={ this.calendarComponentRef }\n            weekends={ this.state.calendarWeekends }\n            events={ this.state.calendarEvents }\n            dateClick={ this.handleDateClick }\n            />\n        </div>\n      </div>\n    )\n  }\n\n  toggleWeekends = () => {\n    this.setState({ // update a property\n      calendarWeekends: !this.state.calendarWeekends\n    })\n  }\n\n  gotoPast = () => {\n    let calendarApi = this.calendarComponentRef.current.getApi()\n    calendarApi.gotoDate('2000-01-01') // call a method on the Calendar object\n  }\n\n  handleDateClick = (arg) => {\n    if (confirm('Would you like to add an event to ' + arg.dateStr + ' ?')) {\n      this.setState({  // add new event data\n        calendarEvents: this.state.calendarEvents.concat({ // creates a new array\n          title: 'New Event',\n          start: arg.date,\n          allDay: arg.allDay\n        })\n      })\n    }\n  }\n\n}"]},"metadata":{},"sourceType":"module"}