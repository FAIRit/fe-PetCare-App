{"ast":null,"code":"let PATIENTS = [{\n  id: 1,\n  name: \"Dąbek\",\n  species: \"kot\",\n  breed: \"europejska\",\n  age: 12,\n  color: \"biały, czarny\",\n  owner: \"Wioletta Pisała - PKDT, Natalia Nowak - dom tymczasowy\",\n  idnumber: \"brak\"\n}, {\n  id: 2,\n  name: \"Dąbek\",\n  species: \"kot\",\n  breed: \"europejska\",\n  age: 12,\n  color: \"biały, czarny\",\n  owner: \"Wioletta Pisała - PKDT, Natalia Nowak - dom tymczasowy\",\n  idnumber: \"brak\"\n}, {\n  id: 3,\n  name: \"Dąbek\",\n  species: \"kot\",\n  breed: \"europejska\",\n  age: 12,\n  color: \"biały, czarny\",\n  owner: \"Wioletta Pisała - PKDT, Natalia Nowak - dom tymczasowy\",\n  idnumber: \"brak\"\n}, {\n  id: 4,\n  name: \"Dąbek\",\n  species: \"kot\",\n  breed: \"europejska\",\n  age: 12,\n  color: \"biały, czarny\",\n  owner: \"Wioletta Pisała - PKDT, Natalia Nowak - dom tymczasowy\",\n  idnumber: \"brak\"\n}];\n\nconst calculateNextId = list => {\n  var _slice$0$id, _slice$;\n\n  return ((_slice$0$id = (_slice$ = (list || []).slice(-1)[0]) === null || _slice$ === void 0 ? void 0 : _slice$.id) !== null && _slice$0$id !== void 0 ? _slice$0$id : 0) + 1;\n};\n\nexport const getData = () => Promise.resolve(PATIENTS);\nexport const addDoctor = doctor => {\n  PATIENTS = [...PATIENTS, { ...doctor,\n    id: calculateNextId(PATIENTS)\n  }];\n  return Promise.resolve();\n};","map":{"version":3,"sources":["/home/natalia/Desktop/fe-PetCare-App/fe-PetCare-App/my-app/src/services/patients.js"],"names":["PATIENTS","id","name","species","breed","age","color","owner","idnumber","calculateNextId","list","slice","getData","Promise","resolve","addDoctor","doctor"],"mappings":"AAAA,IAAIA,QAAQ,GAAG,CACX;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,OAFV;AAGIC,EAAAA,OAAO,EAAE,KAHb;AAIIC,EAAAA,KAAK,EAAE,YAJX;AAKIC,EAAAA,GAAG,EAAE,EALT;AAMIC,EAAAA,KAAK,EAAE,eANX;AAOIC,EAAAA,KAAK,EAAE,wDAPX;AAQIC,EAAAA,QAAQ,EAAE;AARd,CADW,EAYX;AACIP,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,OAFV;AAGIC,EAAAA,OAAO,EAAE,KAHb;AAIIC,EAAAA,KAAK,EAAE,YAJX;AAKIC,EAAAA,GAAG,EAAE,EALT;AAMIC,EAAAA,KAAK,EAAE,eANX;AAOIC,EAAAA,KAAK,EAAE,wDAPX;AAQIC,EAAAA,QAAQ,EAAE;AARd,CAZW,EAsBR;AACCP,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,IAAI,EAAE,OAFP;AAGCC,EAAAA,OAAO,EAAE,KAHV;AAICC,EAAAA,KAAK,EAAE,YAJR;AAKCC,EAAAA,GAAG,EAAE,EALN;AAMCC,EAAAA,KAAK,EAAE,eANR;AAOCC,EAAAA,KAAK,EAAE,wDAPR;AAQCC,EAAAA,QAAQ,EAAE;AARX,CAtBQ,EAgCR;AACCP,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,IAAI,EAAE,OAFP;AAGCC,EAAAA,OAAO,EAAE,KAHV;AAICC,EAAAA,KAAK,EAAE,YAJR;AAKCC,EAAAA,GAAG,EAAE,EALN;AAMCC,EAAAA,KAAK,EAAE,eANR;AAOCC,EAAAA,KAAK,EAAE,wDAPR;AAQCC,EAAAA,QAAQ,EAAE;AARX,CAhCQ,CAAf;;AA6CA,MAAMC,eAAe,GAAGC,IAAI;AAAA;;AAAA,SAAI,2BAAC,CAACA,IAAI,IAAI,EAAT,EAAaC,KAAb,CAAmB,CAAC,CAApB,EAAuB,CAAvB,CAAD,4CAAC,QAA4BV,EAA7B,qDAAmC,CAAnC,IAAwC,CAA5C;AAAA,CAA5B;;AAEA,OAAO,MAAMW,OAAO,GAAG,MAAMC,OAAO,CAACC,OAAR,CAAgBd,QAAhB,CAAtB;AAEP,OAAO,MAAMe,SAAS,GAAGC,MAAM,IAAI;AAC/BhB,EAAAA,QAAQ,GAAG,CAAC,GAAGA,QAAJ,EAAe,EAAE,GAAGgB,MAAL;AAAaf,IAAAA,EAAE,EAAEQ,eAAe,CAACT,QAAD;AAAhC,GAAf,CAAX;AACA,SAAOa,OAAO,CAACC,OAAR,EAAP;AACH,CAHM","sourcesContent":["let PATIENTS = [\n    {\n        id: 1,\n        name: \"Dąbek\",\n        species: \"kot\",\n        breed: \"europejska\",\n        age: 12,\n        color: \"biały, czarny\",\n        owner: \"Wioletta Pisała - PKDT, Natalia Nowak - dom tymczasowy\",\n        idnumber: \"brak\"\n\n    },\n    {\n        id: 2,\n        name: \"Dąbek\",\n        species: \"kot\",\n        breed: \"europejska\",\n        age: 12,\n        color: \"biały, czarny\",\n        owner: \"Wioletta Pisała - PKDT, Natalia Nowak - dom tymczasowy\",\n        idnumber: \"brak\"\n\n    }, {\n        id: 3,\n        name: \"Dąbek\",\n        species: \"kot\",\n        breed: \"europejska\",\n        age: 12,\n        color: \"biały, czarny\",\n        owner: \"Wioletta Pisała - PKDT, Natalia Nowak - dom tymczasowy\",\n        idnumber: \"brak\"\n\n    }, {\n        id: 4,\n        name: \"Dąbek\",\n        species: \"kot\",\n        breed: \"europejska\",\n        age: 12,\n        color: \"biały, czarny\",\n        owner: \"Wioletta Pisała - PKDT, Natalia Nowak - dom tymczasowy\",\n        idnumber: \"brak\"\n\n    },\n];\n\nconst calculateNextId = list => ((list || []).slice(-1)[0] ?.id ?? 0) + 1;\n\nexport const getData = () => Promise.resolve(PATIENTS);\n\nexport const addDoctor = doctor => {\n    PATIENTS = [...PATIENTS, ({ ...doctor, id: calculateNextId(PATIENTS) })];\n    return Promise.resolve();\n};"]},"metadata":{},"sourceType":"module"}