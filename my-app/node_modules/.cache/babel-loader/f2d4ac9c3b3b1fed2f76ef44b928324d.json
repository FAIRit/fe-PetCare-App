{"ast":null,"code":"import identity from \"./identity.js\";\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nfunction nest(values, map, reduce, keys) {\n  return function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new Map();\n    const keyof = keys[i++];\n    let index = -1;\n\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);else groups.set(key, [value]);\n    }\n\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n\n    return map(groups);\n  }(values, 0);\n}","map":{"version":3,"sources":["/home/natalia/Desktop/fe-PetCare-App/fe-PetCare-App/my-app/node_modules/d3-array/src/group.js"],"names":["identity","group","values","keys","nest","groups","Array","from","rollup","reduce","rollups","map","regroup","i","length","Map","keyof","index","value","key","get","push","set"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,eAArB;AAEA,eAAe,SAASC,KAAT,CAAeC,MAAf,EAAuB,GAAGC,IAA1B,EAAgC;AAC7C,SAAOC,IAAI,CAACF,MAAD,EAASF,QAAT,EAAmBA,QAAnB,EAA6BG,IAA7B,CAAX;AACD;AAED,OAAO,SAASE,MAAT,CAAgBH,MAAhB,EAAwB,GAAGC,IAA3B,EAAiC;AACtC,SAAOC,IAAI,CAACF,MAAD,EAASI,KAAK,CAACC,IAAf,EAAqBP,QAArB,EAA+BG,IAA/B,CAAX;AACD;AAED,OAAO,SAASK,MAAT,CAAgBN,MAAhB,EAAwBO,MAAxB,EAAgC,GAAGN,IAAnC,EAAyC;AAC9C,SAAOC,IAAI,CAACF,MAAD,EAASF,QAAT,EAAmBS,MAAnB,EAA2BN,IAA3B,CAAX;AACD;AAED,OAAO,SAASO,OAAT,CAAiBR,MAAjB,EAAyBO,MAAzB,EAAiC,GAAGN,IAApC,EAA0C;AAC/C,SAAOC,IAAI,CAACF,MAAD,EAASI,KAAK,CAACC,IAAf,EAAqBE,MAArB,EAA6BN,IAA7B,CAAX;AACD;;AAED,SAASC,IAAT,CAAcF,MAAd,EAAsBS,GAAtB,EAA2BF,MAA3B,EAAmCN,IAAnC,EAAyC;AACvC,SAAQ,SAASS,OAAT,CAAiBV,MAAjB,EAAyBW,CAAzB,EAA4B;AAClC,QAAIA,CAAC,IAAIV,IAAI,CAACW,MAAd,EAAsB,OAAOL,MAAM,CAACP,MAAD,CAAb;AACtB,UAAMG,MAAM,GAAG,IAAIU,GAAJ,EAAf;AACA,UAAMC,KAAK,GAAGb,IAAI,CAACU,CAAC,EAAF,CAAlB;AACA,QAAII,KAAK,GAAG,CAAC,CAAb;;AACA,SAAK,MAAMC,KAAX,IAAoBhB,MAApB,EAA4B;AAC1B,YAAMiB,GAAG,GAAGH,KAAK,CAACE,KAAD,EAAQ,EAAED,KAAV,EAAiBf,MAAjB,CAAjB;AACA,YAAMD,KAAK,GAAGI,MAAM,CAACe,GAAP,CAAWD,GAAX,CAAd;AACA,UAAIlB,KAAJ,EAAWA,KAAK,CAACoB,IAAN,CAAWH,KAAX,EAAX,KACKb,MAAM,CAACiB,GAAP,CAAWH,GAAX,EAAgB,CAACD,KAAD,CAAhB;AACN;;AACD,SAAK,MAAM,CAACC,GAAD,EAAMjB,MAAN,CAAX,IAA4BG,MAA5B,EAAoC;AAClCA,MAAAA,MAAM,CAACiB,GAAP,CAAWH,GAAX,EAAgBP,OAAO,CAACV,MAAD,EAASW,CAAT,CAAvB;AACD;;AACD,WAAOF,GAAG,CAACN,MAAD,CAAV;AACD,GAfM,CAeJH,MAfI,EAeI,CAfJ,CAAP;AAgBD","sourcesContent":["import identity from \"./identity.js\";\n\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new Map();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n"]},"metadata":{},"sourceType":"module"}