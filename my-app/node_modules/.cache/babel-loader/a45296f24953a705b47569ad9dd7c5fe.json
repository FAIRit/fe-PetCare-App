{"ast":null,"code":"/*!\nFullCalendar Day Grid Plugin v4.4.0\nDocs & License: https://fullcalendar.io/\n(c) 2019 Adam Shaw\n*/\nimport { addWeeks, diffWeeks, DateProfileGenerator, createElement, listenBySelector, removeElement, computeRect, computeClippingRect, applyStyle, computeEventDraggable, computeEventStartResizable, computeEventEndResizable, cssToStr, htmlEscape, FgEventRenderer, appendToElement, prependToElement, htmlToElement, FillRenderer, memoizeRendering, createFormatter, addDays, DateComponent, rangeContainsMarker, getDayClasses, findElements, PositionCache, buildGotoAnchorHtml, findChildren, insertAfterElement, intersectRanges, memoize, ScrollComponent, matchCellWidths, uncompensateScroll, compensateScroll, subtractInnerElHeight, distributeHeight, undistributeHeight, View, Slicer, DayHeader, DaySeries, DayTable, createPlugin } from '@fullcalendar/core';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar DayGridDateProfileGenerator =\n/** @class */\nfunction (_super) {\n  __extends(DayGridDateProfileGenerator, _super);\n\n  function DayGridDateProfileGenerator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  } // Computes the date range that will be rendered.\n\n\n  DayGridDateProfileGenerator.prototype.buildRenderRange = function (currentRange, currentRangeUnit, isRangeAllDay) {\n    var dateEnv = this.dateEnv;\n\n    var renderRange = _super.prototype.buildRenderRange.call(this, currentRange, currentRangeUnit, isRangeAllDay);\n\n    var start = renderRange.start;\n    var end = renderRange.end;\n    var endOfWeek; // year and month views should be aligned with weeks. this is already done for week\n\n    if (/^(year|month)$/.test(currentRangeUnit)) {\n      start = dateEnv.startOfWeek(start); // make end-of-week if not already\n\n      endOfWeek = dateEnv.startOfWeek(end);\n\n      if (endOfWeek.valueOf() !== end.valueOf()) {\n        end = addWeeks(endOfWeek, 1);\n      }\n    } // ensure 6 weeks\n\n\n    if (this.options.monthMode && this.options.fixedWeekCount) {\n      var rowCnt = Math.ceil( // could be partial weeks due to hiddenDays\n      diffWeeks(start, end));\n      end = addWeeks(end, 6 - rowCnt);\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  };\n\n  return DayGridDateProfileGenerator;\n}(DateProfileGenerator);\n/* A rectangular panel that is absolutely positioned over other content\n------------------------------------------------------------------------------------------------------------------------\nOptions:\n  - className (string)\n  - content (HTML string, element, or element array)\n  - parentEl\n  - top\n  - left\n  - right (the x coord of where the right edge should be. not a \"CSS\" right)\n  - autoHide (boolean)\n  - show (callback)\n  - hide (callback)\n*/\n\n\nvar Popover =\n/** @class */\nfunction () {\n  function Popover(options) {\n    var _this = this;\n\n    this.isHidden = true;\n    this.margin = 10; // the space required between the popover and the edges of the scroll container\n    // Triggered when the user clicks *anywhere* in the document, for the autoHide feature\n\n    this.documentMousedown = function (ev) {\n      // only hide the popover if the click happened outside the popover\n      if (_this.el && !_this.el.contains(ev.target)) {\n        _this.hide();\n      }\n    };\n\n    this.options = options;\n  } // Shows the popover on the specified position. Renders it if not already\n\n\n  Popover.prototype.show = function () {\n    if (this.isHidden) {\n      if (!this.el) {\n        this.render();\n      }\n\n      this.el.style.display = '';\n      this.position();\n      this.isHidden = false;\n      this.trigger('show');\n    }\n  }; // Hides the popover, through CSS, but does not remove it from the DOM\n\n\n  Popover.prototype.hide = function () {\n    if (!this.isHidden) {\n      this.el.style.display = 'none';\n      this.isHidden = true;\n      this.trigger('hide');\n    }\n  }; // Creates `this.el` and renders content inside of it\n\n\n  Popover.prototype.render = function () {\n    var _this = this;\n\n    var options = this.options;\n    var el = this.el = createElement('div', {\n      className: 'fc-popover ' + (options.className || ''),\n      style: {\n        top: '0',\n        left: '0'\n      }\n    });\n\n    if (typeof options.content === 'function') {\n      options.content(el);\n    }\n\n    options.parentEl.appendChild(el); // when a click happens on anything inside with a 'fc-close' className, hide the popover\n\n    listenBySelector(el, 'click', '.fc-close', function (ev) {\n      _this.hide();\n    });\n\n    if (options.autoHide) {\n      document.addEventListener('mousedown', this.documentMousedown);\n    }\n  }; // Hides and unregisters any handlers\n\n\n  Popover.prototype.destroy = function () {\n    this.hide();\n\n    if (this.el) {\n      removeElement(this.el);\n      this.el = null;\n    }\n\n    document.removeEventListener('mousedown', this.documentMousedown);\n  }; // Positions the popover optimally, using the top/left/right options\n\n\n  Popover.prototype.position = function () {\n    var options = this.options;\n    var el = this.el;\n    var elDims = el.getBoundingClientRect(); // only used for width,height\n\n    var origin = computeRect(el.offsetParent);\n    var clippingRect = computeClippingRect(options.parentEl);\n    var top; // the \"position\" (not \"offset\") values for the popover\n\n    var left; //\n    // compute top and left\n\n    top = options.top || 0;\n\n    if (options.left !== undefined) {\n      left = options.left;\n    } else if (options.right !== undefined) {\n      left = options.right - elDims.width; // derive the left value from the right value\n    } else {\n      left = 0;\n    } // constrain to the view port. if constrained by two edges, give precedence to top/left\n\n\n    top = Math.min(top, clippingRect.bottom - elDims.height - this.margin);\n    top = Math.max(top, clippingRect.top + this.margin);\n    left = Math.min(left, clippingRect.right - elDims.width - this.margin);\n    left = Math.max(left, clippingRect.left + this.margin);\n    applyStyle(el, {\n      top: top - origin.top,\n      left: left - origin.left\n    });\n  }; // Triggers a callback. Calls a function in the option hash of the same name.\n  // Arguments beyond the first `name` are forwarded on.\n  // TODO: better code reuse for this. Repeat code\n  // can kill this???\n\n\n  Popover.prototype.trigger = function (name) {\n    if (this.options[name]) {\n      this.options[name].apply(this, Array.prototype.slice.call(arguments, 1));\n    }\n  };\n\n  return Popover;\n}();\n/* Event-rendering methods for the DayGrid class\n----------------------------------------------------------------------------------------------------------------------*/\n// \"Simple\" is bad a name. has nothing to do with SimpleDayGrid\n\n\nvar SimpleDayGridEventRenderer =\n/** @class */\nfunction (_super) {\n  __extends(SimpleDayGridEventRenderer, _super);\n\n  function SimpleDayGridEventRenderer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  } // Builds the HTML to be used for the default element for an individual segment\n\n\n  SimpleDayGridEventRenderer.prototype.renderSegHtml = function (seg, mirrorInfo) {\n    var context = this.context;\n    var eventRange = seg.eventRange;\n    var eventDef = eventRange.def;\n    var eventUi = eventRange.ui;\n    var allDay = eventDef.allDay;\n    var isDraggable = computeEventDraggable(context, eventDef, eventUi);\n    var isResizableFromStart = allDay && seg.isStart && computeEventStartResizable(context, eventDef, eventUi);\n    var isResizableFromEnd = allDay && seg.isEnd && computeEventEndResizable(context, eventDef, eventUi);\n    var classes = this.getSegClasses(seg, isDraggable, isResizableFromStart || isResizableFromEnd, mirrorInfo);\n    var skinCss = cssToStr(this.getSkinCss(eventUi));\n    var timeHtml = '';\n    var timeText;\n    var titleHtml;\n    classes.unshift('fc-day-grid-event', 'fc-h-event'); // Only display a timed events time if it is the starting segment\n\n    if (seg.isStart) {\n      timeText = this.getTimeText(eventRange);\n\n      if (timeText) {\n        timeHtml = '<span class=\"fc-time\">' + htmlEscape(timeText) + '</span>';\n      }\n    }\n\n    titleHtml = '<span class=\"fc-title\">' + (htmlEscape(eventDef.title || '') || '&nbsp;') + // we always want one line of height\n    '</span>';\n    return '<a class=\"' + classes.join(' ') + '\"' + (eventDef.url ? ' href=\"' + htmlEscape(eventDef.url) + '\"' : '') + (skinCss ? ' style=\"' + skinCss + '\"' : '') + '>' + '<div class=\"fc-content\">' + (context.options.dir === 'rtl' ? titleHtml + ' ' + timeHtml : // put a natural space in between\n    timeHtml + ' ' + titleHtml //\n    ) + '</div>' + (isResizableFromStart ? '<div class=\"fc-resizer fc-start-resizer\"></div>' : '') + (isResizableFromEnd ? '<div class=\"fc-resizer fc-end-resizer\"></div>' : '') + '</a>';\n  }; // Computes a default event time formatting string if `eventTimeFormat` is not explicitly defined\n\n\n  SimpleDayGridEventRenderer.prototype.computeEventTimeFormat = function () {\n    return {\n      hour: 'numeric',\n      minute: '2-digit',\n      omitZeroMinute: true,\n      meridiem: 'narrow'\n    };\n  };\n\n  SimpleDayGridEventRenderer.prototype.computeDisplayEventEnd = function () {\n    return false; // TODO: somehow consider the originating DayGrid's column count\n  };\n\n  return SimpleDayGridEventRenderer;\n}(FgEventRenderer);\n/* Event-rendering methods for the DayGrid class\n----------------------------------------------------------------------------------------------------------------------*/\n\n\nvar DayGridEventRenderer =\n/** @class */\nfunction (_super) {\n  __extends(DayGridEventRenderer, _super);\n\n  function DayGridEventRenderer(dayGrid) {\n    var _this = _super.call(this) || this;\n\n    _this.dayGrid = dayGrid;\n    return _this;\n  } // Renders the given foreground event segments onto the grid\n\n\n  DayGridEventRenderer.prototype.attachSegs = function (segs, mirrorInfo) {\n    var rowStructs = this.rowStructs = this.renderSegRows(segs); // append to each row's content skeleton\n\n    this.dayGrid.rowEls.forEach(function (rowNode, i) {\n      rowNode.querySelector('.fc-content-skeleton > table').appendChild(rowStructs[i].tbodyEl);\n    }); // removes the \"more..\" events popover\n\n    if (!mirrorInfo) {\n      this.dayGrid.removeSegPopover();\n    }\n  }; // Unrenders all currently rendered foreground event segments\n\n\n  DayGridEventRenderer.prototype.detachSegs = function () {\n    var rowStructs = this.rowStructs || [];\n    var rowStruct;\n\n    while (rowStruct = rowStructs.pop()) {\n      removeElement(rowStruct.tbodyEl);\n    }\n\n    this.rowStructs = null;\n  }; // Uses the given events array to generate <tbody> elements that should be appended to each row's content skeleton.\n  // Returns an array of rowStruct objects (see the bottom of `renderSegRow`).\n  // PRECONDITION: each segment shoud already have a rendered and assigned `.el`\n\n\n  DayGridEventRenderer.prototype.renderSegRows = function (segs) {\n    var rowStructs = [];\n    var segRows;\n    var row;\n    segRows = this.groupSegRows(segs); // group into nested arrays\n    // iterate each row of segment groupings\n\n    for (row = 0; row < segRows.length; row++) {\n      rowStructs.push(this.renderSegRow(row, segRows[row]));\n    }\n\n    return rowStructs;\n  }; // Given a row # and an array of segments all in the same row, render a <tbody> element, a skeleton that contains\n  // the segments. Returns object with a bunch of internal data about how the render was calculated.\n  // NOTE: modifies rowSegs\n\n\n  DayGridEventRenderer.prototype.renderSegRow = function (row, rowSegs) {\n    var isRtl = this.context.isRtl;\n    var dayGrid = this.dayGrid;\n    var colCnt = dayGrid.colCnt;\n    var segLevels = this.buildSegLevels(rowSegs); // group into sub-arrays of levels\n\n    var levelCnt = Math.max(1, segLevels.length); // ensure at least one level\n\n    var tbody = document.createElement('tbody');\n    var segMatrix = []; // lookup for which segments are rendered into which level+col cells\n\n    var cellMatrix = []; // lookup for all <td> elements of the level+col matrix\n\n    var loneCellMatrix = []; // lookup for <td> elements that only take up a single column\n\n    var i;\n    var levelSegs;\n    var col;\n    var tr;\n    var j;\n    var seg;\n    var td; // populates empty cells from the current column (`col`) to `endCol`\n\n    function emptyCellsUntil(endCol) {\n      while (col < endCol) {\n        // try to grab a cell from the level above and extend its rowspan. otherwise, create a fresh cell\n        td = (loneCellMatrix[i - 1] || [])[col];\n\n        if (td) {\n          td.rowSpan = (td.rowSpan || 1) + 1;\n        } else {\n          td = document.createElement('td');\n          tr.appendChild(td);\n        }\n\n        cellMatrix[i][col] = td;\n        loneCellMatrix[i][col] = td;\n        col++;\n      }\n    }\n\n    for (i = 0; i < levelCnt; i++) {\n      // iterate through all levels\n      levelSegs = segLevels[i];\n      col = 0;\n      tr = document.createElement('tr');\n      segMatrix.push([]);\n      cellMatrix.push([]);\n      loneCellMatrix.push([]); // levelCnt might be 1 even though there are no actual levels. protect against this.\n      // this single empty row is useful for styling.\n\n      if (levelSegs) {\n        for (j = 0; j < levelSegs.length; j++) {\n          // iterate through segments in level\n          seg = levelSegs[j];\n          var leftCol = isRtl ? colCnt - 1 - seg.lastCol : seg.firstCol;\n          var rightCol = isRtl ? colCnt - 1 - seg.firstCol : seg.lastCol;\n          emptyCellsUntil(leftCol); // create a container that occupies or more columns. append the event element.\n\n          td = createElement('td', {\n            className: 'fc-event-container'\n          }, seg.el);\n\n          if (leftCol !== rightCol) {\n            td.colSpan = rightCol - leftCol + 1;\n          } else {\n            // a single-column segment\n            loneCellMatrix[i][col] = td;\n          }\n\n          while (col <= rightCol) {\n            cellMatrix[i][col] = td;\n            segMatrix[i][col] = seg;\n            col++;\n          }\n\n          tr.appendChild(td);\n        }\n      }\n\n      emptyCellsUntil(colCnt); // finish off the row\n\n      var introHtml = dayGrid.renderProps.renderIntroHtml();\n\n      if (introHtml) {\n        if (isRtl) {\n          appendToElement(tr, introHtml);\n        } else {\n          prependToElement(tr, introHtml);\n        }\n      }\n\n      tbody.appendChild(tr);\n    }\n\n    return {\n      row: row,\n      tbodyEl: tbody,\n      cellMatrix: cellMatrix,\n      segMatrix: segMatrix,\n      segLevels: segLevels,\n      segs: rowSegs\n    };\n  }; // Stacks a flat array of segments, which are all assumed to be in the same row, into subarrays of vertical levels.\n  // NOTE: modifies segs\n\n\n  DayGridEventRenderer.prototype.buildSegLevels = function (segs) {\n    var isRtl = this.context.isRtl;\n    var colCnt = this.dayGrid.colCnt;\n    var levels = [];\n    var i;\n    var seg;\n    var j; // Give preference to elements with certain criteria, so they have\n    // a chance to be closer to the top.\n\n    segs = this.sortEventSegs(segs);\n\n    for (i = 0; i < segs.length; i++) {\n      seg = segs[i]; // loop through levels, starting with the topmost, until the segment doesn't collide with other segments\n\n      for (j = 0; j < levels.length; j++) {\n        if (!isDaySegCollision(seg, levels[j])) {\n          break;\n        }\n      } // `j` now holds the desired subrow index\n\n\n      seg.level = j;\n      seg.leftCol = isRtl ? colCnt - 1 - seg.lastCol : seg.firstCol; // for sorting only\n\n      seg.rightCol = isRtl ? colCnt - 1 - seg.firstCol : seg.lastCol // for sorting only\n      ;\n      (levels[j] || (levels[j] = [])).push(seg);\n    } // order segments left-to-right. very important if calendar is RTL\n\n\n    for (j = 0; j < levels.length; j++) {\n      levels[j].sort(compareDaySegCols);\n    }\n\n    return levels;\n  }; // Given a flat array of segments, return an array of sub-arrays, grouped by each segment's row\n\n\n  DayGridEventRenderer.prototype.groupSegRows = function (segs) {\n    var segRows = [];\n    var i;\n\n    for (i = 0; i < this.dayGrid.rowCnt; i++) {\n      segRows.push([]);\n    }\n\n    for (i = 0; i < segs.length; i++) {\n      segRows[segs[i].row].push(segs[i]);\n    }\n\n    return segRows;\n  }; // Computes a default `displayEventEnd` value if one is not expliclty defined\n\n\n  DayGridEventRenderer.prototype.computeDisplayEventEnd = function () {\n    return this.dayGrid.colCnt === 1; // we'll likely have space if there's only one day\n  };\n\n  return DayGridEventRenderer;\n}(SimpleDayGridEventRenderer); // Computes whether two segments' columns collide. They are assumed to be in the same row.\n\n\nfunction isDaySegCollision(seg, otherSegs) {\n  var i;\n  var otherSeg;\n\n  for (i = 0; i < otherSegs.length; i++) {\n    otherSeg = otherSegs[i];\n\n    if (otherSeg.firstCol <= seg.lastCol && otherSeg.lastCol >= seg.firstCol) {\n      return true;\n    }\n  }\n\n  return false;\n} // A cmp function for determining the leftmost event\n\n\nfunction compareDaySegCols(a, b) {\n  return a.leftCol - b.leftCol;\n}\n\nvar DayGridMirrorRenderer =\n/** @class */\nfunction (_super) {\n  __extends(DayGridMirrorRenderer, _super);\n\n  function DayGridMirrorRenderer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DayGridMirrorRenderer.prototype.attachSegs = function (segs, mirrorInfo) {\n    var sourceSeg = mirrorInfo.sourceSeg;\n    var rowStructs = this.rowStructs = this.renderSegRows(segs); // inject each new event skeleton into each associated row\n\n    this.dayGrid.rowEls.forEach(function (rowNode, row) {\n      var skeletonEl = htmlToElement('<div class=\"fc-mirror-skeleton\"><table></table></div>'); // will be absolutely positioned\n\n      var skeletonTopEl;\n      var skeletonTop; // If there is an original segment, match the top position. Otherwise, put it at the row's top level\n\n      if (sourceSeg && sourceSeg.row === row) {\n        skeletonTopEl = sourceSeg.el;\n      } else {\n        skeletonTopEl = rowNode.querySelector('.fc-content-skeleton tbody');\n\n        if (!skeletonTopEl) {\n          // when no events\n          skeletonTopEl = rowNode.querySelector('.fc-content-skeleton table');\n        }\n      }\n\n      skeletonTop = skeletonTopEl.getBoundingClientRect().top - rowNode.getBoundingClientRect().top; // the offsetParent origin\n\n      skeletonEl.style.top = skeletonTop + 'px';\n      skeletonEl.querySelector('table').appendChild(rowStructs[row].tbodyEl);\n      rowNode.appendChild(skeletonEl);\n    });\n  };\n\n  return DayGridMirrorRenderer;\n}(DayGridEventRenderer);\n\nvar EMPTY_CELL_HTML = '<td style=\"pointer-events:none\"></td>';\n\nvar DayGridFillRenderer =\n/** @class */\nfunction (_super) {\n  __extends(DayGridFillRenderer, _super);\n\n  function DayGridFillRenderer(dayGrid) {\n    var _this = _super.call(this) || this;\n\n    _this.fillSegTag = 'td'; // override the default tag name\n\n    _this.dayGrid = dayGrid;\n    return _this;\n  }\n\n  DayGridFillRenderer.prototype.renderSegs = function (type, context, segs) {\n    // don't render timed background events\n    if (type === 'bgEvent') {\n      segs = segs.filter(function (seg) {\n        return seg.eventRange.def.allDay;\n      });\n    }\n\n    _super.prototype.renderSegs.call(this, type, context, segs);\n  };\n\n  DayGridFillRenderer.prototype.attachSegs = function (type, segs) {\n    var els = [];\n    var i;\n    var seg;\n    var skeletonEl;\n\n    for (i = 0; i < segs.length; i++) {\n      seg = segs[i];\n      skeletonEl = this.renderFillRow(type, seg);\n      this.dayGrid.rowEls[seg.row].appendChild(skeletonEl);\n      els.push(skeletonEl);\n    }\n\n    return els;\n  }; // Generates the HTML needed for one row of a fill. Requires the seg's el to be rendered.\n\n\n  DayGridFillRenderer.prototype.renderFillRow = function (type, seg) {\n    var dayGrid = this.dayGrid;\n    var isRtl = this.context.isRtl;\n    var colCnt = dayGrid.colCnt;\n    var leftCol = isRtl ? colCnt - 1 - seg.lastCol : seg.firstCol;\n    var rightCol = isRtl ? colCnt - 1 - seg.firstCol : seg.lastCol;\n    var startCol = leftCol;\n    var endCol = rightCol + 1;\n    var className;\n    var skeletonEl;\n    var trEl;\n\n    if (type === 'businessHours') {\n      className = 'bgevent';\n    } else {\n      className = type.toLowerCase();\n    }\n\n    skeletonEl = htmlToElement('<div class=\"fc-' + className + '-skeleton\">' + '<table><tr></tr></table>' + '</div>');\n    trEl = skeletonEl.getElementsByTagName('tr')[0];\n\n    if (startCol > 0) {\n      appendToElement(trEl, // will create (startCol + 1) td's\n      new Array(startCol + 1).join(EMPTY_CELL_HTML));\n    }\n\n    seg.el.colSpan = endCol - startCol;\n    trEl.appendChild(seg.el);\n\n    if (endCol < colCnt) {\n      appendToElement(trEl, // will create (colCnt - endCol) td's\n      new Array(colCnt - endCol + 1).join(EMPTY_CELL_HTML));\n    }\n\n    var introHtml = dayGrid.renderProps.renderIntroHtml();\n\n    if (introHtml) {\n      if (isRtl) {\n        appendToElement(trEl, introHtml);\n      } else {\n        prependToElement(trEl, introHtml);\n      }\n    }\n\n    return skeletonEl;\n  };\n\n  return DayGridFillRenderer;\n}(FillRenderer);\n\nvar DayTile =\n/** @class */\nfunction (_super) {\n  __extends(DayTile, _super);\n\n  function DayTile(el) {\n    var _this = _super.call(this, el) || this;\n\n    var eventRenderer = _this.eventRenderer = new DayTileEventRenderer(_this);\n    var renderFrame = _this.renderFrame = memoizeRendering(_this._renderFrame);\n    _this.renderFgEvents = memoizeRendering(eventRenderer.renderSegs.bind(eventRenderer), eventRenderer.unrender.bind(eventRenderer), [renderFrame]);\n    _this.renderEventSelection = memoizeRendering(eventRenderer.selectByInstanceId.bind(eventRenderer), eventRenderer.unselectByInstanceId.bind(eventRenderer), [_this.renderFgEvents]);\n    _this.renderEventDrag = memoizeRendering(eventRenderer.hideByHash.bind(eventRenderer), eventRenderer.showByHash.bind(eventRenderer), [renderFrame]);\n    _this.renderEventResize = memoizeRendering(eventRenderer.hideByHash.bind(eventRenderer), eventRenderer.showByHash.bind(eventRenderer), [renderFrame]);\n    return _this;\n  }\n\n  DayTile.prototype.firstContext = function (context) {\n    context.calendar.registerInteractiveComponent(this, {\n      el: this.el,\n      useEventCenter: false\n    });\n  };\n\n  DayTile.prototype.render = function (props, context) {\n    this.renderFrame(props.date);\n    this.renderFgEvents(context, props.fgSegs);\n    this.renderEventSelection(props.eventSelection);\n    this.renderEventDrag(props.eventDragInstances);\n    this.renderEventResize(props.eventResizeInstances);\n  };\n\n  DayTile.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    this.renderFrame.unrender(); // should unrender everything else\n\n    this.context.calendar.unregisterInteractiveComponent(this);\n  };\n\n  DayTile.prototype._renderFrame = function (date) {\n    var _a = this.context,\n        theme = _a.theme,\n        dateEnv = _a.dateEnv,\n        options = _a.options;\n    var title = dateEnv.format(date, createFormatter(options.dayPopoverFormat) // TODO: cache\n    );\n    this.el.innerHTML = '<div class=\"fc-header ' + theme.getClass('popoverHeader') + '\">' + '<span class=\"fc-title\">' + htmlEscape(title) + '</span>' + '<span class=\"fc-close ' + theme.getIconClass('close') + '\"></span>' + '</div>' + '<div class=\"fc-body ' + theme.getClass('popoverContent') + '\">' + '<div class=\"fc-event-container\"></div>' + '</div>';\n    this.segContainerEl = this.el.querySelector('.fc-event-container');\n  };\n\n  DayTile.prototype.queryHit = function (positionLeft, positionTop, elWidth, elHeight) {\n    var date = this.props.date; // HACK\n\n    if (positionLeft < elWidth && positionTop < elHeight) {\n      return {\n        component: this,\n        dateSpan: {\n          allDay: true,\n          range: {\n            start: date,\n            end: addDays(date, 1)\n          }\n        },\n        dayEl: this.el,\n        rect: {\n          left: 0,\n          top: 0,\n          right: elWidth,\n          bottom: elHeight\n        },\n        layer: 1\n      };\n    }\n  };\n\n  return DayTile;\n}(DateComponent);\n\nvar DayTileEventRenderer =\n/** @class */\nfunction (_super) {\n  __extends(DayTileEventRenderer, _super);\n\n  function DayTileEventRenderer(dayTile) {\n    var _this = _super.call(this) || this;\n\n    _this.dayTile = dayTile;\n    return _this;\n  }\n\n  DayTileEventRenderer.prototype.attachSegs = function (segs) {\n    for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n      var seg = segs_1[_i];\n      this.dayTile.segContainerEl.appendChild(seg.el);\n    }\n  };\n\n  DayTileEventRenderer.prototype.detachSegs = function (segs) {\n    for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {\n      var seg = segs_2[_i];\n      removeElement(seg.el);\n    }\n  };\n\n  return DayTileEventRenderer;\n}(SimpleDayGridEventRenderer);\n\nvar DayBgRow =\n/** @class */\nfunction () {\n  function DayBgRow(context) {\n    this.context = context;\n  }\n\n  DayBgRow.prototype.renderHtml = function (props) {\n    var parts = [];\n\n    if (props.renderIntroHtml) {\n      parts.push(props.renderIntroHtml());\n    }\n\n    for (var _i = 0, _a = props.cells; _i < _a.length; _i++) {\n      var cell = _a[_i];\n      parts.push(renderCellHtml(cell.date, props.dateProfile, this.context, cell.htmlAttrs));\n    }\n\n    if (!props.cells.length) {\n      parts.push('<td class=\"fc-day ' + this.context.theme.getClass('widgetContent') + '\"></td>');\n    }\n\n    if (this.context.options.dir === 'rtl') {\n      parts.reverse();\n    }\n\n    return '<tr>' + parts.join('') + '</tr>';\n  };\n\n  return DayBgRow;\n}();\n\nfunction renderCellHtml(date, dateProfile, context, otherAttrs) {\n  var dateEnv = context.dateEnv,\n      theme = context.theme;\n  var isDateValid = rangeContainsMarker(dateProfile.activeRange, date); // TODO: called too frequently. cache somehow.\n\n  var classes = getDayClasses(date, dateProfile, context);\n  classes.unshift('fc-day', theme.getClass('widgetContent'));\n  return '<td class=\"' + classes.join(' ') + '\"' + (isDateValid ? ' data-date=\"' + dateEnv.formatIso(date, {\n    omitTime: true\n  }) + '\"' : '') + (otherAttrs ? ' ' + otherAttrs : '') + '></td>';\n}\n\nvar DAY_NUM_FORMAT = createFormatter({\n  day: 'numeric'\n});\nvar WEEK_NUM_FORMAT = createFormatter({\n  week: 'numeric'\n});\n\nvar DayGrid =\n/** @class */\nfunction (_super) {\n  __extends(DayGrid, _super);\n\n  function DayGrid(el, renderProps) {\n    var _this = _super.call(this, el) || this;\n\n    _this.bottomCoordPadding = 0; // hack for extending the hit area for the last row of the coordinate grid\n\n    _this.isCellSizesDirty = false;\n    _this.renderProps = renderProps;\n    var eventRenderer = _this.eventRenderer = new DayGridEventRenderer(_this);\n    var fillRenderer = _this.fillRenderer = new DayGridFillRenderer(_this);\n    _this.mirrorRenderer = new DayGridMirrorRenderer(_this);\n    var renderCells = _this.renderCells = memoizeRendering(_this._renderCells, _this._unrenderCells);\n    _this.renderBusinessHours = memoizeRendering(fillRenderer.renderSegs.bind(fillRenderer, 'businessHours'), fillRenderer.unrender.bind(fillRenderer, 'businessHours'), [renderCells]);\n    _this.renderDateSelection = memoizeRendering(fillRenderer.renderSegs.bind(fillRenderer, 'highlight'), fillRenderer.unrender.bind(fillRenderer, 'highlight'), [renderCells]);\n    _this.renderBgEvents = memoizeRendering(fillRenderer.renderSegs.bind(fillRenderer, 'bgEvent'), fillRenderer.unrender.bind(fillRenderer, 'bgEvent'), [renderCells]);\n    _this.renderFgEvents = memoizeRendering(eventRenderer.renderSegs.bind(eventRenderer), eventRenderer.unrender.bind(eventRenderer), [renderCells]);\n    _this.renderEventSelection = memoizeRendering(eventRenderer.selectByInstanceId.bind(eventRenderer), eventRenderer.unselectByInstanceId.bind(eventRenderer), [_this.renderFgEvents]);\n    _this.renderEventDrag = memoizeRendering(_this._renderEventDrag, _this._unrenderEventDrag, [renderCells]);\n    _this.renderEventResize = memoizeRendering(_this._renderEventResize, _this._unrenderEventResize, [renderCells]);\n    return _this;\n  }\n\n  DayGrid.prototype.render = function (props, context) {\n    var cells = props.cells;\n    this.rowCnt = cells.length;\n    this.colCnt = cells[0].length;\n    this.renderCells(cells, props.isRigid);\n    this.renderBusinessHours(context, props.businessHourSegs);\n    this.renderDateSelection(context, props.dateSelectionSegs);\n    this.renderBgEvents(context, props.bgEventSegs);\n    this.renderFgEvents(context, props.fgEventSegs);\n    this.renderEventSelection(props.eventSelection);\n    this.renderEventDrag(props.eventDrag);\n    this.renderEventResize(props.eventResize);\n\n    if (this.segPopoverTile) {\n      this.updateSegPopoverTile();\n    }\n  };\n\n  DayGrid.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    this.renderCells.unrender(); // will unrender everything else\n  };\n\n  DayGrid.prototype.getCellRange = function (row, col) {\n    var start = this.props.cells[row][col].date;\n    var end = addDays(start, 1);\n    return {\n      start: start,\n      end: end\n    };\n  };\n\n  DayGrid.prototype.updateSegPopoverTile = function (date, segs) {\n    var ownProps = this.props;\n    this.segPopoverTile.receiveProps({\n      date: date || this.segPopoverTile.props.date,\n      fgSegs: segs || this.segPopoverTile.props.fgSegs,\n      eventSelection: ownProps.eventSelection,\n      eventDragInstances: ownProps.eventDrag ? ownProps.eventDrag.affectedInstances : null,\n      eventResizeInstances: ownProps.eventResize ? ownProps.eventResize.affectedInstances : null\n    }, this.context);\n  };\n  /* Date Rendering\n  ------------------------------------------------------------------------------------------------------------------*/\n\n\n  DayGrid.prototype._renderCells = function (cells, isRigid) {\n    var _a = this.context,\n        calendar = _a.calendar,\n        view = _a.view,\n        isRtl = _a.isRtl,\n        dateEnv = _a.dateEnv;\n\n    var _b = this,\n        rowCnt = _b.rowCnt,\n        colCnt = _b.colCnt;\n\n    var html = '';\n    var row;\n    var col;\n\n    for (row = 0; row < rowCnt; row++) {\n      html += this.renderDayRowHtml(row, isRigid);\n    }\n\n    this.el.innerHTML = html;\n    this.rowEls = findElements(this.el, '.fc-row');\n    this.cellEls = findElements(this.el, '.fc-day, .fc-disabled-day');\n\n    if (isRtl) {\n      this.cellEls.reverse();\n    }\n\n    this.rowPositions = new PositionCache(this.el, this.rowEls, false, true // vertical\n    );\n    this.colPositions = new PositionCache(this.el, this.cellEls.slice(0, colCnt), // only the first row\n    true, false // horizontal\n    ); // trigger dayRender with each cell's element\n\n    for (row = 0; row < rowCnt; row++) {\n      for (col = 0; col < colCnt; col++) {\n        calendar.publiclyTrigger('dayRender', [{\n          date: dateEnv.toDate(cells[row][col].date),\n          el: this.getCellEl(row, col),\n          view: view\n        }]);\n      }\n    }\n\n    this.isCellSizesDirty = true;\n  };\n\n  DayGrid.prototype._unrenderCells = function () {\n    this.removeSegPopover();\n  }; // Generates the HTML for a single row, which is a div that wraps a table.\n  // `row` is the row number.\n\n\n  DayGrid.prototype.renderDayRowHtml = function (row, isRigid) {\n    var theme = this.context.theme;\n    var classes = ['fc-row', 'fc-week', theme.getClass('dayRow')];\n\n    if (isRigid) {\n      classes.push('fc-rigid');\n    }\n\n    var bgRow = new DayBgRow(this.context);\n    return '' + '<div class=\"' + classes.join(' ') + '\">' + '<div class=\"fc-bg\">' + '<table class=\"' + theme.getClass('tableGrid') + '\">' + bgRow.renderHtml({\n      cells: this.props.cells[row],\n      dateProfile: this.props.dateProfile,\n      renderIntroHtml: this.renderProps.renderBgIntroHtml\n    }) + '</table>' + '</div>' + '<div class=\"fc-content-skeleton\">' + '<table>' + (this.getIsNumbersVisible() ? '<thead>' + this.renderNumberTrHtml(row) + '</thead>' : '') + '</table>' + '</div>' + '</div>';\n  };\n\n  DayGrid.prototype.getIsNumbersVisible = function () {\n    return this.getIsDayNumbersVisible() || this.renderProps.cellWeekNumbersVisible || this.renderProps.colWeekNumbersVisible;\n  };\n\n  DayGrid.prototype.getIsDayNumbersVisible = function () {\n    return this.rowCnt > 1;\n  };\n  /* Grid Number Rendering\n  ------------------------------------------------------------------------------------------------------------------*/\n\n\n  DayGrid.prototype.renderNumberTrHtml = function (row) {\n    var isRtl = this.context.isRtl;\n    var intro = this.renderProps.renderNumberIntroHtml(row, this);\n    return '' + '<tr>' + (isRtl ? '' : intro) + this.renderNumberCellsHtml(row) + (isRtl ? intro : '') + '</tr>';\n  };\n\n  DayGrid.prototype.renderNumberCellsHtml = function (row) {\n    var htmls = [];\n    var col;\n    var date;\n\n    for (col = 0; col < this.colCnt; col++) {\n      date = this.props.cells[row][col].date;\n      htmls.push(this.renderNumberCellHtml(date));\n    }\n\n    if (this.context.isRtl) {\n      htmls.reverse();\n    }\n\n    return htmls.join('');\n  }; // Generates the HTML for the <td>s of the \"number\" row in the DayGrid's content skeleton.\n  // The number row will only exist if either day numbers or week numbers are turned on.\n\n\n  DayGrid.prototype.renderNumberCellHtml = function (date) {\n    var _a = this.context,\n        dateEnv = _a.dateEnv,\n        options = _a.options;\n    var html = '';\n    var isDateValid = rangeContainsMarker(this.props.dateProfile.activeRange, date); // TODO: called too frequently. cache somehow.\n\n    var isDayNumberVisible = this.getIsDayNumbersVisible() && isDateValid;\n    var classes;\n    var weekCalcFirstDow;\n\n    if (!isDayNumberVisible && !this.renderProps.cellWeekNumbersVisible) {\n      // no numbers in day cell (week number must be along the side)\n      return '<td></td>'; //  will create an empty space above events :(\n    }\n\n    classes = getDayClasses(date, this.props.dateProfile, this.context);\n    classes.unshift('fc-day-top');\n\n    if (this.renderProps.cellWeekNumbersVisible) {\n      weekCalcFirstDow = dateEnv.weekDow;\n    }\n\n    html += '<td class=\"' + classes.join(' ') + '\"' + (isDateValid ? ' data-date=\"' + dateEnv.formatIso(date, {\n      omitTime: true\n    }) + '\"' : '') + '>';\n\n    if (this.renderProps.cellWeekNumbersVisible && date.getUTCDay() === weekCalcFirstDow) {\n      html += buildGotoAnchorHtml(options, dateEnv, {\n        date: date,\n        type: 'week'\n      }, {\n        'class': 'fc-week-number'\n      }, dateEnv.format(date, WEEK_NUM_FORMAT) // inner HTML\n      );\n    }\n\n    if (isDayNumberVisible) {\n      html += buildGotoAnchorHtml(options, dateEnv, date, {\n        'class': 'fc-day-number'\n      }, dateEnv.format(date, DAY_NUM_FORMAT) // inner HTML\n      );\n    }\n\n    html += '</td>';\n    return html;\n  };\n  /* Sizing\n  ------------------------------------------------------------------------------------------------------------------*/\n\n\n  DayGrid.prototype.updateSize = function (isResize) {\n    var calendar = this.context.calendar;\n\n    var _a = this,\n        fillRenderer = _a.fillRenderer,\n        eventRenderer = _a.eventRenderer,\n        mirrorRenderer = _a.mirrorRenderer;\n\n    if (isResize || this.isCellSizesDirty || calendar.isEventsUpdated // hack\n    ) {\n        this.buildPositionCaches();\n        this.isCellSizesDirty = false;\n      }\n\n    fillRenderer.computeSizes(isResize);\n    eventRenderer.computeSizes(isResize);\n    mirrorRenderer.computeSizes(isResize);\n    fillRenderer.assignSizes(isResize);\n    eventRenderer.assignSizes(isResize);\n    mirrorRenderer.assignSizes(isResize);\n  };\n\n  DayGrid.prototype.buildPositionCaches = function () {\n    this.buildColPositions();\n    this.buildRowPositions();\n  };\n\n  DayGrid.prototype.buildColPositions = function () {\n    this.colPositions.build();\n  };\n\n  DayGrid.prototype.buildRowPositions = function () {\n    this.rowPositions.build();\n    this.rowPositions.bottoms[this.rowCnt - 1] += this.bottomCoordPadding; // hack\n  };\n  /* Hit System\n  ------------------------------------------------------------------------------------------------------------------*/\n\n\n  DayGrid.prototype.positionToHit = function (leftPosition, topPosition) {\n    var _a = this,\n        colPositions = _a.colPositions,\n        rowPositions = _a.rowPositions;\n\n    var col = colPositions.leftToIndex(leftPosition);\n    var row = rowPositions.topToIndex(topPosition);\n\n    if (row != null && col != null) {\n      return {\n        row: row,\n        col: col,\n        dateSpan: {\n          range: this.getCellRange(row, col),\n          allDay: true\n        },\n        dayEl: this.getCellEl(row, col),\n        relativeRect: {\n          left: colPositions.lefts[col],\n          right: colPositions.rights[col],\n          top: rowPositions.tops[row],\n          bottom: rowPositions.bottoms[row]\n        }\n      };\n    }\n  };\n  /* Cell System\n  ------------------------------------------------------------------------------------------------------------------*/\n  // FYI: the first column is the leftmost column, regardless of date\n\n\n  DayGrid.prototype.getCellEl = function (row, col) {\n    return this.cellEls[row * this.colCnt + col];\n  };\n  /* Event Drag Visualization\n  ------------------------------------------------------------------------------------------------------------------*/\n\n\n  DayGrid.prototype._renderEventDrag = function (state) {\n    if (state) {\n      this.eventRenderer.hideByHash(state.affectedInstances);\n      this.fillRenderer.renderSegs('highlight', this.context, state.segs);\n    }\n  };\n\n  DayGrid.prototype._unrenderEventDrag = function (state) {\n    if (state) {\n      this.eventRenderer.showByHash(state.affectedInstances);\n      this.fillRenderer.unrender('highlight', this.context);\n    }\n  };\n  /* Event Resize Visualization\n  ------------------------------------------------------------------------------------------------------------------*/\n\n\n  DayGrid.prototype._renderEventResize = function (state) {\n    if (state) {\n      this.eventRenderer.hideByHash(state.affectedInstances);\n      this.fillRenderer.renderSegs('highlight', this.context, state.segs);\n      this.mirrorRenderer.renderSegs(this.context, state.segs, {\n        isResizing: true,\n        sourceSeg: state.sourceSeg\n      });\n    }\n  };\n\n  DayGrid.prototype._unrenderEventResize = function (state) {\n    if (state) {\n      this.eventRenderer.showByHash(state.affectedInstances);\n      this.fillRenderer.unrender('highlight', this.context);\n      this.mirrorRenderer.unrender(this.context, state.segs, {\n        isResizing: true,\n        sourceSeg: state.sourceSeg\n      });\n    }\n  };\n  /* More+ Link Popover\n  ------------------------------------------------------------------------------------------------------------------*/\n\n\n  DayGrid.prototype.removeSegPopover = function () {\n    if (this.segPopover) {\n      this.segPopover.hide(); // in handler, will call segPopover's removeElement\n    }\n  }; // Limits the number of \"levels\" (vertically stacking layers of events) for each row of the grid.\n  // `levelLimit` can be false (don't limit), a number, or true (should be computed).\n\n\n  DayGrid.prototype.limitRows = function (levelLimit) {\n    var rowStructs = this.eventRenderer.rowStructs || [];\n    var row; // row #\n\n    var rowLevelLimit;\n\n    for (row = 0; row < rowStructs.length; row++) {\n      this.unlimitRow(row);\n\n      if (!levelLimit) {\n        rowLevelLimit = false;\n      } else if (typeof levelLimit === 'number') {\n        rowLevelLimit = levelLimit;\n      } else {\n        rowLevelLimit = this.computeRowLevelLimit(row);\n      }\n\n      if (rowLevelLimit !== false) {\n        this.limitRow(row, rowLevelLimit);\n      }\n    }\n  }; // Computes the number of levels a row will accomodate without going outside its bounds.\n  // Assumes the row is \"rigid\" (maintains a constant height regardless of what is inside).\n  // `row` is the row number.\n\n\n  DayGrid.prototype.computeRowLevelLimit = function (row) {\n    var rowEl = this.rowEls[row]; // the containing \"fake\" row div\n\n    var rowBottom = rowEl.getBoundingClientRect().bottom; // relative to viewport!\n\n    var trEls = findChildren(this.eventRenderer.rowStructs[row].tbodyEl);\n    var i;\n    var trEl; // Reveal one level <tr> at a time and stop when we find one out of bounds\n\n    for (i = 0; i < trEls.length; i++) {\n      trEl = trEls[i];\n      trEl.classList.remove('fc-limited'); // reset to original state (reveal)\n\n      if (trEl.getBoundingClientRect().bottom > rowBottom) {\n        return i;\n      }\n    }\n\n    return false; // should not limit at all\n  }; // Limits the given grid row to the maximum number of levels and injects \"more\" links if necessary.\n  // `row` is the row number.\n  // `levelLimit` is a number for the maximum (inclusive) number of levels allowed.\n\n\n  DayGrid.prototype.limitRow = function (row, levelLimit) {\n    var _this = this;\n\n    var colCnt = this.colCnt;\n    var isRtl = this.context.isRtl;\n    var rowStruct = this.eventRenderer.rowStructs[row];\n    var moreNodes = []; // array of \"more\" <a> links and <td> DOM nodes\n\n    var col = 0; // col #, left-to-right (not chronologically)\n\n    var levelSegs; // array of segment objects in the last allowable level, ordered left-to-right\n\n    var cellMatrix; // a matrix (by level, then column) of all <td> elements in the row\n\n    var limitedNodes; // array of temporarily hidden level <tr> and segment <td> DOM nodes\n\n    var i;\n    var seg;\n    var segsBelow; // array of segment objects below `seg` in the current `col`\n\n    var totalSegsBelow; // total number of segments below `seg` in any of the columns `seg` occupies\n\n    var colSegsBelow; // array of segment arrays, below seg, one for each column (offset from segs's first column)\n\n    var td;\n    var rowSpan;\n    var segMoreNodes; // array of \"more\" <td> cells that will stand-in for the current seg's cell\n\n    var j;\n    var moreTd;\n    var moreWrap;\n    var moreLink; // Iterates through empty level cells and places \"more\" links inside if need be\n\n    var emptyCellsUntil = function (endCol) {\n      while (col < endCol) {\n        segsBelow = _this.getCellSegs(row, col, levelLimit);\n\n        if (segsBelow.length) {\n          td = cellMatrix[levelLimit - 1][col];\n          moreLink = _this.renderMoreLink(row, col, segsBelow);\n          moreWrap = createElement('div', null, moreLink);\n          td.appendChild(moreWrap);\n          moreNodes.push(moreWrap);\n        }\n\n        col++;\n      }\n    };\n\n    if (levelLimit && levelLimit < rowStruct.segLevels.length) {\n      // is it actually over the limit?\n      levelSegs = rowStruct.segLevels[levelLimit - 1];\n      cellMatrix = rowStruct.cellMatrix;\n      limitedNodes = findChildren(rowStruct.tbodyEl).slice(levelLimit); // get level <tr> elements past the limit\n\n      limitedNodes.forEach(function (node) {\n        node.classList.add('fc-limited'); // hide elements and get a simple DOM-nodes array\n      }); // iterate though segments in the last allowable level\n\n      for (i = 0; i < levelSegs.length; i++) {\n        seg = levelSegs[i];\n        var leftCol = isRtl ? colCnt - 1 - seg.lastCol : seg.firstCol;\n        var rightCol = isRtl ? colCnt - 1 - seg.firstCol : seg.lastCol;\n        emptyCellsUntil(leftCol); // process empty cells before the segment\n        // determine *all* segments below `seg` that occupy the same columns\n\n        colSegsBelow = [];\n        totalSegsBelow = 0;\n\n        while (col <= rightCol) {\n          segsBelow = this.getCellSegs(row, col, levelLimit);\n          colSegsBelow.push(segsBelow);\n          totalSegsBelow += segsBelow.length;\n          col++;\n        }\n\n        if (totalSegsBelow) {\n          // do we need to replace this segment with one or many \"more\" links?\n          td = cellMatrix[levelLimit - 1][leftCol]; // the segment's parent cell\n\n          rowSpan = td.rowSpan || 1;\n          segMoreNodes = []; // make a replacement <td> for each column the segment occupies. will be one for each colspan\n\n          for (j = 0; j < colSegsBelow.length; j++) {\n            moreTd = createElement('td', {\n              className: 'fc-more-cell',\n              rowSpan: rowSpan\n            });\n            segsBelow = colSegsBelow[j];\n            moreLink = this.renderMoreLink(row, leftCol + j, [seg].concat(segsBelow) // count seg as hidden too\n            );\n            moreWrap = createElement('div', null, moreLink);\n            moreTd.appendChild(moreWrap);\n            segMoreNodes.push(moreTd);\n            moreNodes.push(moreTd);\n          }\n\n          td.classList.add('fc-limited');\n          insertAfterElement(td, segMoreNodes);\n          limitedNodes.push(td);\n        }\n      }\n\n      emptyCellsUntil(this.colCnt); // finish off the level\n\n      rowStruct.moreEls = moreNodes; // for easy undoing later\n\n      rowStruct.limitedEls = limitedNodes; // for easy undoing later\n    }\n  }; // Reveals all levels and removes all \"more\"-related elements for a grid's row.\n  // `row` is a row number.\n\n\n  DayGrid.prototype.unlimitRow = function (row) {\n    var rowStruct = this.eventRenderer.rowStructs[row];\n\n    if (rowStruct.moreEls) {\n      rowStruct.moreEls.forEach(removeElement);\n      rowStruct.moreEls = null;\n    }\n\n    if (rowStruct.limitedEls) {\n      rowStruct.limitedEls.forEach(function (limitedEl) {\n        limitedEl.classList.remove('fc-limited');\n      });\n      rowStruct.limitedEls = null;\n    }\n  }; // Renders an <a> element that represents hidden event element for a cell.\n  // Responsible for attaching click handler as well.\n\n\n  DayGrid.prototype.renderMoreLink = function (row, col, hiddenSegs) {\n    var _this = this;\n\n    var _a = this.context,\n        calendar = _a.calendar,\n        view = _a.view,\n        dateEnv = _a.dateEnv,\n        options = _a.options,\n        isRtl = _a.isRtl;\n    var a = createElement('a', {\n      className: 'fc-more'\n    });\n    a.innerText = this.getMoreLinkText(hiddenSegs.length);\n    a.addEventListener('click', function (ev) {\n      var clickOption = options.eventLimitClick;\n\n      var _col = isRtl ? _this.colCnt - col - 1 : col; // HACK: props.cells has different dir system?\n\n\n      var date = _this.props.cells[row][_col].date;\n      var moreEl = ev.currentTarget;\n\n      var dayEl = _this.getCellEl(row, col);\n\n      var allSegs = _this.getCellSegs(row, col); // rescope the segments to be within the cell's date\n\n\n      var reslicedAllSegs = _this.resliceDaySegs(allSegs, date);\n\n      var reslicedHiddenSegs = _this.resliceDaySegs(hiddenSegs, date);\n\n      if (typeof clickOption === 'function') {\n        // the returned value can be an atomic option\n        clickOption = calendar.publiclyTrigger('eventLimitClick', [{\n          date: dateEnv.toDate(date),\n          allDay: true,\n          dayEl: dayEl,\n          moreEl: moreEl,\n          segs: reslicedAllSegs,\n          hiddenSegs: reslicedHiddenSegs,\n          jsEvent: ev,\n          view: view\n        }]);\n      }\n\n      if (clickOption === 'popover') {\n        _this.showSegPopover(row, col, moreEl, reslicedAllSegs);\n      } else if (typeof clickOption === 'string') {\n        // a view name\n        calendar.zoomTo(date, clickOption);\n      }\n    });\n    return a;\n  }; // Reveals the popover that displays all events within a cell\n\n\n  DayGrid.prototype.showSegPopover = function (row, col, moreLink, segs) {\n    var _this = this;\n\n    var _a = this.context,\n        calendar = _a.calendar,\n        view = _a.view,\n        theme = _a.theme,\n        isRtl = _a.isRtl;\n\n    var _col = isRtl ? this.colCnt - col - 1 : col; // HACK: props.cells has different dir system?\n\n\n    var moreWrap = moreLink.parentNode; // the <div> wrapper around the <a>\n\n    var topEl; // the element we want to match the top coordinate of\n\n    var options;\n\n    if (this.rowCnt === 1) {\n      topEl = view.el; // will cause the popover to cover any sort of header\n    } else {\n      topEl = this.rowEls[row]; // will align with top of row\n    }\n\n    options = {\n      className: 'fc-more-popover ' + theme.getClass('popover'),\n      parentEl: view.el,\n      top: computeRect(topEl).top,\n      autoHide: true,\n      content: function (el) {\n        _this.segPopoverTile = new DayTile(el);\n\n        _this.updateSegPopoverTile(_this.props.cells[row][_col].date, segs);\n      },\n      hide: function () {\n        _this.segPopoverTile.destroy();\n\n        _this.segPopoverTile = null;\n\n        _this.segPopover.destroy();\n\n        _this.segPopover = null;\n      }\n    }; // Determine horizontal coordinate.\n    // We use the moreWrap instead of the <td> to avoid border confusion.\n\n    if (isRtl) {\n      options.right = computeRect(moreWrap).right + 1; // +1 to be over cell border\n    } else {\n      options.left = computeRect(moreWrap).left - 1; // -1 to be over cell border\n    }\n\n    this.segPopover = new Popover(options);\n    this.segPopover.show();\n    calendar.releaseAfterSizingTriggers(); // hack for eventPositioned\n  }; // Given the events within an array of segment objects, reslice them to be in a single day\n\n\n  DayGrid.prototype.resliceDaySegs = function (segs, dayDate) {\n    var dayStart = dayDate;\n    var dayEnd = addDays(dayStart, 1);\n    var dayRange = {\n      start: dayStart,\n      end: dayEnd\n    };\n    var newSegs = [];\n\n    for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n      var seg = segs_1[_i];\n      var eventRange = seg.eventRange;\n      var origRange = eventRange.range;\n      var slicedRange = intersectRanges(origRange, dayRange);\n\n      if (slicedRange) {\n        newSegs.push(__assign({}, seg, {\n          eventRange: {\n            def: eventRange.def,\n            ui: __assign({}, eventRange.ui, {\n              durationEditable: false\n            }),\n            instance: eventRange.instance,\n            range: slicedRange\n          },\n          isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(),\n          isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf()\n        }));\n      }\n    }\n\n    return newSegs;\n  }; // Generates the text that should be inside a \"more\" link, given the number of events it represents\n\n\n  DayGrid.prototype.getMoreLinkText = function (num) {\n    var opt = this.context.options.eventLimitText;\n\n    if (typeof opt === 'function') {\n      return opt(num);\n    } else {\n      return '+' + num + ' ' + opt;\n    }\n  }; // Returns segments within a given cell.\n  // If `startLevel` is specified, returns only events including and below that level. Otherwise returns all segs.\n\n\n  DayGrid.prototype.getCellSegs = function (row, col, startLevel) {\n    var segMatrix = this.eventRenderer.rowStructs[row].segMatrix;\n    var level = startLevel || 0;\n    var segs = [];\n    var seg;\n\n    while (level < segMatrix.length) {\n      seg = segMatrix[level][col];\n\n      if (seg) {\n        segs.push(seg);\n      }\n\n      level++;\n    }\n\n    return segs;\n  };\n\n  return DayGrid;\n}(DateComponent);\n\nvar WEEK_NUM_FORMAT$1 = createFormatter({\n  week: 'numeric'\n});\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a DayGrid subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\n\nvar AbstractDayGridView =\n/** @class */\nfunction (_super) {\n  __extends(AbstractDayGridView, _super);\n\n  function AbstractDayGridView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.processOptions = memoize(_this._processOptions);\n    _this.renderSkeleton = memoizeRendering(_this._renderSkeleton, _this._unrenderSkeleton);\n    /* Header Rendering\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Generates the HTML that will go before the day-of week header cells\n\n    _this.renderHeadIntroHtml = function () {\n      var _a = _this.context,\n          theme = _a.theme,\n          options = _a.options;\n\n      if (_this.colWeekNumbersVisible) {\n        return '' + '<th class=\"fc-week-number ' + theme.getClass('widgetHeader') + '\" ' + _this.weekNumberStyleAttr() + '>' + '<span>' + // needed for matchCellWidths\n        htmlEscape(options.weekLabel) + '</span>' + '</th>';\n      }\n\n      return '';\n    };\n    /* Day Grid Rendering\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Generates the HTML that will go before content-skeleton cells that display the day/week numbers\n\n\n    _this.renderDayGridNumberIntroHtml = function (row, dayGrid) {\n      var _a = _this.context,\n          options = _a.options,\n          dateEnv = _a.dateEnv;\n      var weekStart = dayGrid.props.cells[row][0].date;\n\n      if (_this.colWeekNumbersVisible) {\n        return '' + '<td class=\"fc-week-number\" ' + _this.weekNumberStyleAttr() + '>' + buildGotoAnchorHtml( // aside from link, important for matchCellWidths\n        options, dateEnv, {\n          date: weekStart,\n          type: 'week',\n          forceOff: dayGrid.colCnt === 1\n        }, dateEnv.format(weekStart, WEEK_NUM_FORMAT$1) // inner HTML\n        ) + '</td>';\n      }\n\n      return '';\n    }; // Generates the HTML that goes before the day bg cells for each day-row\n\n\n    _this.renderDayGridBgIntroHtml = function () {\n      var theme = _this.context.theme;\n\n      if (_this.colWeekNumbersVisible) {\n        return '<td class=\"fc-week-number ' + theme.getClass('widgetContent') + '\" ' + _this.weekNumberStyleAttr() + '></td>';\n      }\n\n      return '';\n    }; // Generates the HTML that goes before every other type of row generated by DayGrid.\n    // Affects mirror-skeleton and highlight-skeleton rows.\n\n\n    _this.renderDayGridIntroHtml = function () {\n      if (_this.colWeekNumbersVisible) {\n        return '<td class=\"fc-week-number\" ' + _this.weekNumberStyleAttr() + '></td>';\n      }\n\n      return '';\n    };\n\n    return _this;\n  }\n\n  AbstractDayGridView.prototype._processOptions = function (options) {\n    if (options.weekNumbers) {\n      if (options.weekNumbersWithinDays) {\n        this.cellWeekNumbersVisible = true;\n        this.colWeekNumbersVisible = false;\n      } else {\n        this.cellWeekNumbersVisible = false;\n        this.colWeekNumbersVisible = true;\n      }\n    } else {\n      this.colWeekNumbersVisible = false;\n      this.cellWeekNumbersVisible = false;\n    }\n  };\n\n  AbstractDayGridView.prototype.render = function (props, context) {\n    _super.prototype.render.call(this, props, context);\n\n    this.processOptions(context.options);\n    this.renderSkeleton(context);\n  };\n\n  AbstractDayGridView.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    this.renderSkeleton.unrender();\n  };\n\n  AbstractDayGridView.prototype._renderSkeleton = function (context) {\n    this.el.classList.add('fc-dayGrid-view');\n    this.el.innerHTML = this.renderSkeletonHtml();\n    this.scroller = new ScrollComponent('hidden', // overflow x\n    'auto' // overflow y\n    );\n    var dayGridContainerEl = this.scroller.el;\n    this.el.querySelector('.fc-body > tr > td').appendChild(dayGridContainerEl);\n    dayGridContainerEl.classList.add('fc-day-grid-container');\n    var dayGridEl = createElement('div', {\n      className: 'fc-day-grid'\n    });\n    dayGridContainerEl.appendChild(dayGridEl);\n    this.dayGrid = new DayGrid(dayGridEl, {\n      renderNumberIntroHtml: this.renderDayGridNumberIntroHtml,\n      renderBgIntroHtml: this.renderDayGridBgIntroHtml,\n      renderIntroHtml: this.renderDayGridIntroHtml,\n      colWeekNumbersVisible: this.colWeekNumbersVisible,\n      cellWeekNumbersVisible: this.cellWeekNumbersVisible\n    });\n  };\n\n  AbstractDayGridView.prototype._unrenderSkeleton = function () {\n    this.el.classList.remove('fc-dayGrid-view');\n    this.dayGrid.destroy();\n    this.scroller.destroy();\n  }; // Builds the HTML skeleton for the view.\n  // The day-grid component will render inside of a container defined by this HTML.\n\n\n  AbstractDayGridView.prototype.renderSkeletonHtml = function () {\n    var _a = this.context,\n        theme = _a.theme,\n        options = _a.options;\n    return '' + '<table class=\"' + theme.getClass('tableGrid') + '\">' + (options.columnHeader ? '<thead class=\"fc-head\">' + '<tr>' + '<td class=\"fc-head-container ' + theme.getClass('widgetHeader') + '\">&nbsp;</td>' + '</tr>' + '</thead>' : '') + '<tbody class=\"fc-body\">' + '<tr>' + '<td class=\"' + theme.getClass('widgetContent') + '\"></td>' + '</tr>' + '</tbody>' + '</table>';\n  }; // Generates an HTML attribute string for setting the width of the week number column, if it is known\n\n\n  AbstractDayGridView.prototype.weekNumberStyleAttr = function () {\n    if (this.weekNumberWidth != null) {\n      return 'style=\"width:' + this.weekNumberWidth + 'px\"';\n    }\n\n    return '';\n  }; // Determines whether each row should have a constant height\n\n\n  AbstractDayGridView.prototype.hasRigidRows = function () {\n    var eventLimit = this.context.options.eventLimit;\n    return eventLimit && typeof eventLimit !== 'number';\n  };\n  /* Dimensions\n  ------------------------------------------------------------------------------------------------------------------*/\n\n\n  AbstractDayGridView.prototype.updateSize = function (isResize, viewHeight, isAuto) {\n    _super.prototype.updateSize.call(this, isResize, viewHeight, isAuto); // will call updateBaseSize. important that executes first\n\n\n    this.dayGrid.updateSize(isResize);\n  }; // Refreshes the horizontal dimensions of the view\n\n\n  AbstractDayGridView.prototype.updateBaseSize = function (isResize, viewHeight, isAuto) {\n    var dayGrid = this.dayGrid;\n    var eventLimit = this.context.options.eventLimit;\n    var headRowEl = this.header ? this.header.el : null; // HACK\n\n    var scrollerHeight;\n    var scrollbarWidths; // hack to give the view some height prior to dayGrid's columns being rendered\n    // TODO: separate setting height from scroller VS dayGrid.\n\n    if (!dayGrid.rowEls) {\n      if (!isAuto) {\n        scrollerHeight = this.computeScrollerHeight(viewHeight);\n        this.scroller.setHeight(scrollerHeight);\n      }\n\n      return;\n    }\n\n    if (this.colWeekNumbersVisible) {\n      // Make sure all week number cells running down the side have the same width.\n      this.weekNumberWidth = matchCellWidths(findElements(this.el, '.fc-week-number'));\n    } // reset all heights to be natural\n\n\n    this.scroller.clear();\n\n    if (headRowEl) {\n      uncompensateScroll(headRowEl);\n    }\n\n    dayGrid.removeSegPopover(); // kill the \"more\" popover if displayed\n    // is the event limit a constant level number?\n\n    if (eventLimit && typeof eventLimit === 'number') {\n      dayGrid.limitRows(eventLimit); // limit the levels first so the height can redistribute after\n    } // distribute the height to the rows\n    // (viewHeight is a \"recommended\" value if isAuto)\n\n\n    scrollerHeight = this.computeScrollerHeight(viewHeight);\n    this.setGridHeight(scrollerHeight, isAuto); // is the event limit dynamically calculated?\n\n    if (eventLimit && typeof eventLimit !== 'number') {\n      dayGrid.limitRows(eventLimit); // limit the levels after the grid's row heights have been set\n    }\n\n    if (!isAuto) {\n      // should we force dimensions of the scroll container?\n      this.scroller.setHeight(scrollerHeight);\n      scrollbarWidths = this.scroller.getScrollbarWidths();\n\n      if (scrollbarWidths.left || scrollbarWidths.right) {\n        // using scrollbars?\n        if (headRowEl) {\n          compensateScroll(headRowEl, scrollbarWidths);\n        } // doing the scrollbar compensation might have created text overflow which created more height. redo\n\n\n        scrollerHeight = this.computeScrollerHeight(viewHeight);\n        this.scroller.setHeight(scrollerHeight);\n      } // guarantees the same scrollbar widths\n\n\n      this.scroller.lockOverflow(scrollbarWidths);\n    }\n  }; // given a desired total height of the view, returns what the height of the scroller should be\n\n\n  AbstractDayGridView.prototype.computeScrollerHeight = function (viewHeight) {\n    return viewHeight - subtractInnerElHeight(this.el, this.scroller.el); // everything that's NOT the scroller\n  }; // Sets the height of just the DayGrid component in this view\n\n\n  AbstractDayGridView.prototype.setGridHeight = function (height, isAuto) {\n    if (this.context.options.monthMode) {\n      // if auto, make the height of each row the height that it would be if there were 6 weeks\n      if (isAuto) {\n        height *= this.dayGrid.rowCnt / 6;\n      }\n\n      distributeHeight(this.dayGrid.rowEls, height, !isAuto); // if auto, don't compensate for height-hogging rows\n    } else {\n      if (isAuto) {\n        undistributeHeight(this.dayGrid.rowEls); // let the rows be their natural height with no expanding\n      } else {\n        distributeHeight(this.dayGrid.rowEls, height, true); // true = compensate for height-hogging rows\n      }\n    }\n  };\n  /* Scroll\n  ------------------------------------------------------------------------------------------------------------------*/\n\n\n  AbstractDayGridView.prototype.computeDateScroll = function (duration) {\n    return {\n      top: 0\n    };\n  };\n\n  AbstractDayGridView.prototype.queryDateScroll = function () {\n    return {\n      top: this.scroller.getScrollTop()\n    };\n  };\n\n  AbstractDayGridView.prototype.applyDateScroll = function (scroll) {\n    if (scroll.top !== undefined) {\n      this.scroller.setScrollTop(scroll.top);\n    }\n  };\n\n  return AbstractDayGridView;\n}(View);\n\nAbstractDayGridView.prototype.dateProfileGeneratorClass = DayGridDateProfileGenerator;\n\nvar SimpleDayGrid =\n/** @class */\nfunction (_super) {\n  __extends(SimpleDayGrid, _super);\n\n  function SimpleDayGrid(dayGrid) {\n    var _this = _super.call(this, dayGrid.el) || this;\n\n    _this.slicer = new DayGridSlicer();\n    _this.dayGrid = dayGrid;\n    return _this;\n  }\n\n  SimpleDayGrid.prototype.firstContext = function (context) {\n    context.calendar.registerInteractiveComponent(this, {\n      el: this.dayGrid.el\n    });\n  };\n\n  SimpleDayGrid.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    this.context.calendar.unregisterInteractiveComponent(this);\n  };\n\n  SimpleDayGrid.prototype.render = function (props, context) {\n    var dayGrid = this.dayGrid;\n    var dateProfile = props.dateProfile,\n        dayTable = props.dayTable;\n    dayGrid.receiveProps(__assign({}, this.slicer.sliceProps(props, dateProfile, props.nextDayThreshold, context.calendar, dayGrid, dayTable), {\n      dateProfile: dateProfile,\n      cells: dayTable.cells,\n      isRigid: props.isRigid\n    }), context);\n  };\n\n  SimpleDayGrid.prototype.buildPositionCaches = function () {\n    this.dayGrid.buildPositionCaches();\n  };\n\n  SimpleDayGrid.prototype.queryHit = function (positionLeft, positionTop) {\n    var rawHit = this.dayGrid.positionToHit(positionLeft, positionTop);\n\n    if (rawHit) {\n      return {\n        component: this.dayGrid,\n        dateSpan: rawHit.dateSpan,\n        dayEl: rawHit.dayEl,\n        rect: {\n          left: rawHit.relativeRect.left,\n          right: rawHit.relativeRect.right,\n          top: rawHit.relativeRect.top,\n          bottom: rawHit.relativeRect.bottom\n        },\n        layer: 0\n      };\n    }\n  };\n\n  return SimpleDayGrid;\n}(DateComponent);\n\nvar DayGridSlicer =\n/** @class */\nfunction (_super) {\n  __extends(DayGridSlicer, _super);\n\n  function DayGridSlicer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DayGridSlicer.prototype.sliceRange = function (dateRange, dayTable) {\n    return dayTable.sliceRange(dateRange);\n  };\n\n  return DayGridSlicer;\n}(Slicer);\n\nvar DayGridView =\n/** @class */\nfunction (_super) {\n  __extends(DayGridView, _super);\n\n  function DayGridView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.buildDayTable = memoize(buildDayTable);\n    return _this;\n  }\n\n  DayGridView.prototype.render = function (props, context) {\n    _super.prototype.render.call(this, props, context); // will call _renderSkeleton/_unrenderSkeleton\n\n\n    var dateProfile = this.props.dateProfile;\n    var dayTable = this.dayTable = this.buildDayTable(dateProfile, props.dateProfileGenerator);\n\n    if (this.header) {\n      this.header.receiveProps({\n        dateProfile: dateProfile,\n        dates: dayTable.headerDates,\n        datesRepDistinctDays: dayTable.rowCnt === 1,\n        renderIntroHtml: this.renderHeadIntroHtml\n      }, context);\n    }\n\n    this.simpleDayGrid.receiveProps({\n      dateProfile: dateProfile,\n      dayTable: dayTable,\n      businessHours: props.businessHours,\n      dateSelection: props.dateSelection,\n      eventStore: props.eventStore,\n      eventUiBases: props.eventUiBases,\n      eventSelection: props.eventSelection,\n      eventDrag: props.eventDrag,\n      eventResize: props.eventResize,\n      isRigid: this.hasRigidRows(),\n      nextDayThreshold: this.context.nextDayThreshold\n    }, context);\n  };\n\n  DayGridView.prototype._renderSkeleton = function (context) {\n    _super.prototype._renderSkeleton.call(this, context);\n\n    if (context.options.columnHeader) {\n      this.header = new DayHeader(this.el.querySelector('.fc-head-container'));\n    }\n\n    this.simpleDayGrid = new SimpleDayGrid(this.dayGrid);\n  };\n\n  DayGridView.prototype._unrenderSkeleton = function () {\n    _super.prototype._unrenderSkeleton.call(this);\n\n    if (this.header) {\n      this.header.destroy();\n    }\n\n    this.simpleDayGrid.destroy();\n  };\n\n  return DayGridView;\n}(AbstractDayGridView);\n\nfunction buildDayTable(dateProfile, dateProfileGenerator) {\n  var daySeries = new DaySeries(dateProfile.renderRange, dateProfileGenerator);\n  return new DayTable(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\n\nvar main = createPlugin({\n  defaultView: 'dayGridMonth',\n  views: {\n    dayGrid: DayGridView,\n    dayGridDay: {\n      type: 'dayGrid',\n      duration: {\n        days: 1\n      }\n    },\n    dayGridWeek: {\n      type: 'dayGrid',\n      duration: {\n        weeks: 1\n      }\n    },\n    dayGridMonth: {\n      type: 'dayGrid',\n      duration: {\n        months: 1\n      },\n      monthMode: true,\n      fixedWeekCount: true\n    }\n  }\n});\nexport default main;\nexport { AbstractDayGridView, DayBgRow, DayGrid, DayGridSlicer, DayGridView, SimpleDayGrid, buildDayTable as buildBasicDayTable };","map":{"version":3,"sources":["/home/natalia/Desktop/fe-PetCare-App/fe-PetCare-App/my-app/node_modules/@fullcalendar/daygrid/main.esm.js"],"names":["addWeeks","diffWeeks","DateProfileGenerator","createElement","listenBySelector","removeElement","computeRect","computeClippingRect","applyStyle","computeEventDraggable","computeEventStartResizable","computeEventEndResizable","cssToStr","htmlEscape","FgEventRenderer","appendToElement","prependToElement","htmlToElement","FillRenderer","memoizeRendering","createFormatter","addDays","DateComponent","rangeContainsMarker","getDayClasses","findElements","PositionCache","buildGotoAnchorHtml","findChildren","insertAfterElement","intersectRanges","memoize","ScrollComponent","matchCellWidths","uncompensateScroll","compensateScroll","subtractInnerElHeight","distributeHeight","undistributeHeight","View","Slicer","DayHeader","DaySeries","DayTable","createPlugin","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","DayGridDateProfileGenerator","_super","buildRenderRange","currentRange","currentRangeUnit","isRangeAllDay","dateEnv","renderRange","start","end","endOfWeek","test","startOfWeek","valueOf","options","monthMode","fixedWeekCount","rowCnt","Math","ceil","Popover","_this","isHidden","margin","documentMousedown","ev","el","contains","target","hide","show","render","style","display","position","trigger","className","top","left","content","parentEl","appendChild","autoHide","document","addEventListener","destroy","removeEventListener","elDims","getBoundingClientRect","origin","offsetParent","clippingRect","undefined","right","width","min","bottom","height","max","name","slice","SimpleDayGridEventRenderer","renderSegHtml","seg","mirrorInfo","context","eventRange","eventDef","def","eventUi","ui","allDay","isDraggable","isResizableFromStart","isStart","isResizableFromEnd","isEnd","classes","getSegClasses","skinCss","getSkinCss","timeHtml","timeText","titleHtml","unshift","getTimeText","title","join","url","dir","computeEventTimeFormat","hour","minute","omitZeroMinute","meridiem","computeDisplayEventEnd","DayGridEventRenderer","dayGrid","attachSegs","segs","rowStructs","renderSegRows","rowEls","forEach","rowNode","querySelector","tbodyEl","removeSegPopover","detachSegs","rowStruct","pop","segRows","row","groupSegRows","push","renderSegRow","rowSegs","isRtl","colCnt","segLevels","buildSegLevels","levelCnt","tbody","segMatrix","cellMatrix","loneCellMatrix","levelSegs","col","tr","j","td","emptyCellsUntil","endCol","rowSpan","leftCol","lastCol","firstCol","rightCol","colSpan","introHtml","renderProps","renderIntroHtml","levels","sortEventSegs","isDaySegCollision","level","sort","compareDaySegCols","otherSegs","otherSeg","a","DayGridMirrorRenderer","sourceSeg","skeletonEl","skeletonTopEl","skeletonTop","EMPTY_CELL_HTML","DayGridFillRenderer","fillSegTag","renderSegs","type","filter","els","renderFillRow","startCol","trEl","toLowerCase","getElementsByTagName","DayTile","eventRenderer","DayTileEventRenderer","renderFrame","_renderFrame","renderFgEvents","bind","unrender","renderEventSelection","selectByInstanceId","unselectByInstanceId","renderEventDrag","hideByHash","showByHash","renderEventResize","firstContext","calendar","registerInteractiveComponent","useEventCenter","props","date","fgSegs","eventSelection","eventDragInstances","eventResizeInstances","unregisterInteractiveComponent","_a","theme","format","dayPopoverFormat","innerHTML","getClass","getIconClass","segContainerEl","queryHit","positionLeft","positionTop","elWidth","elHeight","component","dateSpan","range","dayEl","rect","layer","dayTile","_i","segs_1","segs_2","DayBgRow","renderHtml","parts","cells","cell","renderCellHtml","dateProfile","htmlAttrs","reverse","otherAttrs","isDateValid","activeRange","formatIso","omitTime","DAY_NUM_FORMAT","day","WEEK_NUM_FORMAT","week","DayGrid","bottomCoordPadding","isCellSizesDirty","fillRenderer","mirrorRenderer","renderCells","_renderCells","_unrenderCells","renderBusinessHours","renderDateSelection","renderBgEvents","_renderEventDrag","_unrenderEventDrag","_renderEventResize","_unrenderEventResize","isRigid","businessHourSegs","dateSelectionSegs","bgEventSegs","fgEventSegs","eventDrag","eventResize","segPopoverTile","updateSegPopoverTile","getCellRange","ownProps","receiveProps","affectedInstances","view","_b","html","renderDayRowHtml","cellEls","rowPositions","colPositions","publiclyTrigger","toDate","getCellEl","bgRow","renderBgIntroHtml","getIsNumbersVisible","renderNumberTrHtml","getIsDayNumbersVisible","cellWeekNumbersVisible","colWeekNumbersVisible","intro","renderNumberIntroHtml","renderNumberCellsHtml","htmls","renderNumberCellHtml","isDayNumberVisible","weekCalcFirstDow","weekDow","getUTCDay","updateSize","isResize","isEventsUpdated","buildPositionCaches","computeSizes","assignSizes","buildColPositions","buildRowPositions","build","bottoms","positionToHit","leftPosition","topPosition","leftToIndex","topToIndex","relativeRect","lefts","rights","tops","state","isResizing","segPopover","limitRows","levelLimit","rowLevelLimit","unlimitRow","computeRowLevelLimit","limitRow","rowEl","rowBottom","trEls","classList","remove","moreNodes","limitedNodes","segsBelow","totalSegsBelow","colSegsBelow","segMoreNodes","moreTd","moreWrap","moreLink","getCellSegs","renderMoreLink","node","add","concat","moreEls","limitedEls","limitedEl","hiddenSegs","innerText","getMoreLinkText","clickOption","eventLimitClick","_col","moreEl","currentTarget","allSegs","reslicedAllSegs","resliceDaySegs","reslicedHiddenSegs","jsEvent","showSegPopover","zoomTo","parentNode","topEl","releaseAfterSizingTriggers","dayDate","dayStart","dayEnd","dayRange","newSegs","origRange","slicedRange","durationEditable","instance","num","opt","eventLimitText","startLevel","WEEK_NUM_FORMAT$1","AbstractDayGridView","processOptions","_processOptions","renderSkeleton","_renderSkeleton","_unrenderSkeleton","renderHeadIntroHtml","weekNumberStyleAttr","weekLabel","renderDayGridNumberIntroHtml","weekStart","forceOff","renderDayGridBgIntroHtml","renderDayGridIntroHtml","weekNumbers","weekNumbersWithinDays","renderSkeletonHtml","scroller","dayGridContainerEl","dayGridEl","columnHeader","weekNumberWidth","hasRigidRows","eventLimit","viewHeight","isAuto","updateBaseSize","headRowEl","header","scrollerHeight","scrollbarWidths","computeScrollerHeight","setHeight","clear","setGridHeight","getScrollbarWidths","lockOverflow","computeDateScroll","duration","queryDateScroll","getScrollTop","applyDateScroll","scroll","setScrollTop","dateProfileGeneratorClass","SimpleDayGrid","slicer","DayGridSlicer","dayTable","sliceProps","nextDayThreshold","rawHit","sliceRange","dateRange","DayGridView","buildDayTable","dateProfileGenerator","dates","headerDates","datesRepDistinctDays","simpleDayGrid","businessHours","dateSelection","eventStore","eventUiBases","daySeries","main","defaultView","views","dayGridDay","days","dayGridWeek","weeks","dayGridMonth","months","buildBasicDayTable"],"mappings":"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","sourcesContent":["/*!\nFullCalendar Day Grid Plugin v4.4.0\nDocs & License: https://fullcalendar.io/\n(c) 2019 Adam Shaw\n*/\n\nimport { addWeeks, diffWeeks, DateProfileGenerator, createElement, listenBySelector, removeElement, computeRect, computeClippingRect, applyStyle, computeEventDraggable, computeEventStartResizable, computeEventEndResizable, cssToStr, htmlEscape, FgEventRenderer, appendToElement, prependToElement, htmlToElement, FillRenderer, memoizeRendering, createFormatter, addDays, DateComponent, rangeContainsMarker, getDayClasses, findElements, PositionCache, buildGotoAnchorHtml, findChildren, insertAfterElement, intersectRanges, memoize, ScrollComponent, matchCellWidths, uncompensateScroll, compensateScroll, subtractInnerElHeight, distributeHeight, undistributeHeight, View, Slicer, DayHeader, DaySeries, DayTable, createPlugin } from '@fullcalendar/core';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar DayGridDateProfileGenerator = /** @class */ (function (_super) {\n    __extends(DayGridDateProfileGenerator, _super);\n    function DayGridDateProfileGenerator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // Computes the date range that will be rendered.\n    DayGridDateProfileGenerator.prototype.buildRenderRange = function (currentRange, currentRangeUnit, isRangeAllDay) {\n        var dateEnv = this.dateEnv;\n        var renderRange = _super.prototype.buildRenderRange.call(this, currentRange, currentRangeUnit, isRangeAllDay);\n        var start = renderRange.start;\n        var end = renderRange.end;\n        var endOfWeek;\n        // year and month views should be aligned with weeks. this is already done for week\n        if (/^(year|month)$/.test(currentRangeUnit)) {\n            start = dateEnv.startOfWeek(start);\n            // make end-of-week if not already\n            endOfWeek = dateEnv.startOfWeek(end);\n            if (endOfWeek.valueOf() !== end.valueOf()) {\n                end = addWeeks(endOfWeek, 1);\n            }\n        }\n        // ensure 6 weeks\n        if (this.options.monthMode &&\n            this.options.fixedWeekCount) {\n            var rowCnt = Math.ceil(// could be partial weeks due to hiddenDays\n            diffWeeks(start, end));\n            end = addWeeks(end, 6 - rowCnt);\n        }\n        return { start: start, end: end };\n    };\n    return DayGridDateProfileGenerator;\n}(DateProfileGenerator));\n\n/* A rectangular panel that is absolutely positioned over other content\n------------------------------------------------------------------------------------------------------------------------\nOptions:\n  - className (string)\n  - content (HTML string, element, or element array)\n  - parentEl\n  - top\n  - left\n  - right (the x coord of where the right edge should be. not a \"CSS\" right)\n  - autoHide (boolean)\n  - show (callback)\n  - hide (callback)\n*/\nvar Popover = /** @class */ (function () {\n    function Popover(options) {\n        var _this = this;\n        this.isHidden = true;\n        this.margin = 10; // the space required between the popover and the edges of the scroll container\n        // Triggered when the user clicks *anywhere* in the document, for the autoHide feature\n        this.documentMousedown = function (ev) {\n            // only hide the popover if the click happened outside the popover\n            if (_this.el && !_this.el.contains(ev.target)) {\n                _this.hide();\n            }\n        };\n        this.options = options;\n    }\n    // Shows the popover on the specified position. Renders it if not already\n    Popover.prototype.show = function () {\n        if (this.isHidden) {\n            if (!this.el) {\n                this.render();\n            }\n            this.el.style.display = '';\n            this.position();\n            this.isHidden = false;\n            this.trigger('show');\n        }\n    };\n    // Hides the popover, through CSS, but does not remove it from the DOM\n    Popover.prototype.hide = function () {\n        if (!this.isHidden) {\n            this.el.style.display = 'none';\n            this.isHidden = true;\n            this.trigger('hide');\n        }\n    };\n    // Creates `this.el` and renders content inside of it\n    Popover.prototype.render = function () {\n        var _this = this;\n        var options = this.options;\n        var el = this.el = createElement('div', {\n            className: 'fc-popover ' + (options.className || ''),\n            style: {\n                top: '0',\n                left: '0'\n            }\n        });\n        if (typeof options.content === 'function') {\n            options.content(el);\n        }\n        options.parentEl.appendChild(el);\n        // when a click happens on anything inside with a 'fc-close' className, hide the popover\n        listenBySelector(el, 'click', '.fc-close', function (ev) {\n            _this.hide();\n        });\n        if (options.autoHide) {\n            document.addEventListener('mousedown', this.documentMousedown);\n        }\n    };\n    // Hides and unregisters any handlers\n    Popover.prototype.destroy = function () {\n        this.hide();\n        if (this.el) {\n            removeElement(this.el);\n            this.el = null;\n        }\n        document.removeEventListener('mousedown', this.documentMousedown);\n    };\n    // Positions the popover optimally, using the top/left/right options\n    Popover.prototype.position = function () {\n        var options = this.options;\n        var el = this.el;\n        var elDims = el.getBoundingClientRect(); // only used for width,height\n        var origin = computeRect(el.offsetParent);\n        var clippingRect = computeClippingRect(options.parentEl);\n        var top; // the \"position\" (not \"offset\") values for the popover\n        var left; //\n        // compute top and left\n        top = options.top || 0;\n        if (options.left !== undefined) {\n            left = options.left;\n        }\n        else if (options.right !== undefined) {\n            left = options.right - elDims.width; // derive the left value from the right value\n        }\n        else {\n            left = 0;\n        }\n        // constrain to the view port. if constrained by two edges, give precedence to top/left\n        top = Math.min(top, clippingRect.bottom - elDims.height - this.margin);\n        top = Math.max(top, clippingRect.top + this.margin);\n        left = Math.min(left, clippingRect.right - elDims.width - this.margin);\n        left = Math.max(left, clippingRect.left + this.margin);\n        applyStyle(el, {\n            top: top - origin.top,\n            left: left - origin.left\n        });\n    };\n    // Triggers a callback. Calls a function in the option hash of the same name.\n    // Arguments beyond the first `name` are forwarded on.\n    // TODO: better code reuse for this. Repeat code\n    // can kill this???\n    Popover.prototype.trigger = function (name) {\n        if (this.options[name]) {\n            this.options[name].apply(this, Array.prototype.slice.call(arguments, 1));\n        }\n    };\n    return Popover;\n}());\n\n/* Event-rendering methods for the DayGrid class\n----------------------------------------------------------------------------------------------------------------------*/\n// \"Simple\" is bad a name. has nothing to do with SimpleDayGrid\nvar SimpleDayGridEventRenderer = /** @class */ (function (_super) {\n    __extends(SimpleDayGridEventRenderer, _super);\n    function SimpleDayGridEventRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // Builds the HTML to be used for the default element for an individual segment\n    SimpleDayGridEventRenderer.prototype.renderSegHtml = function (seg, mirrorInfo) {\n        var context = this.context;\n        var eventRange = seg.eventRange;\n        var eventDef = eventRange.def;\n        var eventUi = eventRange.ui;\n        var allDay = eventDef.allDay;\n        var isDraggable = computeEventDraggable(context, eventDef, eventUi);\n        var isResizableFromStart = allDay && seg.isStart && computeEventStartResizable(context, eventDef, eventUi);\n        var isResizableFromEnd = allDay && seg.isEnd && computeEventEndResizable(context, eventDef, eventUi);\n        var classes = this.getSegClasses(seg, isDraggable, isResizableFromStart || isResizableFromEnd, mirrorInfo);\n        var skinCss = cssToStr(this.getSkinCss(eventUi));\n        var timeHtml = '';\n        var timeText;\n        var titleHtml;\n        classes.unshift('fc-day-grid-event', 'fc-h-event');\n        // Only display a timed events time if it is the starting segment\n        if (seg.isStart) {\n            timeText = this.getTimeText(eventRange);\n            if (timeText) {\n                timeHtml = '<span class=\"fc-time\">' + htmlEscape(timeText) + '</span>';\n            }\n        }\n        titleHtml =\n            '<span class=\"fc-title\">' +\n                (htmlEscape(eventDef.title || '') || '&nbsp;') + // we always want one line of height\n                '</span>';\n        return '<a class=\"' + classes.join(' ') + '\"' +\n            (eventDef.url ?\n                ' href=\"' + htmlEscape(eventDef.url) + '\"' :\n                '') +\n            (skinCss ?\n                ' style=\"' + skinCss + '\"' :\n                '') +\n            '>' +\n            '<div class=\"fc-content\">' +\n            (context.options.dir === 'rtl' ?\n                titleHtml + ' ' + timeHtml : // put a natural space in between\n                timeHtml + ' ' + titleHtml //\n            ) +\n            '</div>' +\n            (isResizableFromStart ?\n                '<div class=\"fc-resizer fc-start-resizer\"></div>' :\n                '') +\n            (isResizableFromEnd ?\n                '<div class=\"fc-resizer fc-end-resizer\"></div>' :\n                '') +\n            '</a>';\n    };\n    // Computes a default event time formatting string if `eventTimeFormat` is not explicitly defined\n    SimpleDayGridEventRenderer.prototype.computeEventTimeFormat = function () {\n        return {\n            hour: 'numeric',\n            minute: '2-digit',\n            omitZeroMinute: true,\n            meridiem: 'narrow'\n        };\n    };\n    SimpleDayGridEventRenderer.prototype.computeDisplayEventEnd = function () {\n        return false; // TODO: somehow consider the originating DayGrid's column count\n    };\n    return SimpleDayGridEventRenderer;\n}(FgEventRenderer));\n\n/* Event-rendering methods for the DayGrid class\n----------------------------------------------------------------------------------------------------------------------*/\nvar DayGridEventRenderer = /** @class */ (function (_super) {\n    __extends(DayGridEventRenderer, _super);\n    function DayGridEventRenderer(dayGrid) {\n        var _this = _super.call(this) || this;\n        _this.dayGrid = dayGrid;\n        return _this;\n    }\n    // Renders the given foreground event segments onto the grid\n    DayGridEventRenderer.prototype.attachSegs = function (segs, mirrorInfo) {\n        var rowStructs = this.rowStructs = this.renderSegRows(segs);\n        // append to each row's content skeleton\n        this.dayGrid.rowEls.forEach(function (rowNode, i) {\n            rowNode.querySelector('.fc-content-skeleton > table').appendChild(rowStructs[i].tbodyEl);\n        });\n        // removes the \"more..\" events popover\n        if (!mirrorInfo) {\n            this.dayGrid.removeSegPopover();\n        }\n    };\n    // Unrenders all currently rendered foreground event segments\n    DayGridEventRenderer.prototype.detachSegs = function () {\n        var rowStructs = this.rowStructs || [];\n        var rowStruct;\n        while ((rowStruct = rowStructs.pop())) {\n            removeElement(rowStruct.tbodyEl);\n        }\n        this.rowStructs = null;\n    };\n    // Uses the given events array to generate <tbody> elements that should be appended to each row's content skeleton.\n    // Returns an array of rowStruct objects (see the bottom of `renderSegRow`).\n    // PRECONDITION: each segment shoud already have a rendered and assigned `.el`\n    DayGridEventRenderer.prototype.renderSegRows = function (segs) {\n        var rowStructs = [];\n        var segRows;\n        var row;\n        segRows = this.groupSegRows(segs); // group into nested arrays\n        // iterate each row of segment groupings\n        for (row = 0; row < segRows.length; row++) {\n            rowStructs.push(this.renderSegRow(row, segRows[row]));\n        }\n        return rowStructs;\n    };\n    // Given a row # and an array of segments all in the same row, render a <tbody> element, a skeleton that contains\n    // the segments. Returns object with a bunch of internal data about how the render was calculated.\n    // NOTE: modifies rowSegs\n    DayGridEventRenderer.prototype.renderSegRow = function (row, rowSegs) {\n        var isRtl = this.context.isRtl;\n        var dayGrid = this.dayGrid;\n        var colCnt = dayGrid.colCnt;\n        var segLevels = this.buildSegLevels(rowSegs); // group into sub-arrays of levels\n        var levelCnt = Math.max(1, segLevels.length); // ensure at least one level\n        var tbody = document.createElement('tbody');\n        var segMatrix = []; // lookup for which segments are rendered into which level+col cells\n        var cellMatrix = []; // lookup for all <td> elements of the level+col matrix\n        var loneCellMatrix = []; // lookup for <td> elements that only take up a single column\n        var i;\n        var levelSegs;\n        var col;\n        var tr;\n        var j;\n        var seg;\n        var td;\n        // populates empty cells from the current column (`col`) to `endCol`\n        function emptyCellsUntil(endCol) {\n            while (col < endCol) {\n                // try to grab a cell from the level above and extend its rowspan. otherwise, create a fresh cell\n                td = (loneCellMatrix[i - 1] || [])[col];\n                if (td) {\n                    td.rowSpan = (td.rowSpan || 1) + 1;\n                }\n                else {\n                    td = document.createElement('td');\n                    tr.appendChild(td);\n                }\n                cellMatrix[i][col] = td;\n                loneCellMatrix[i][col] = td;\n                col++;\n            }\n        }\n        for (i = 0; i < levelCnt; i++) { // iterate through all levels\n            levelSegs = segLevels[i];\n            col = 0;\n            tr = document.createElement('tr');\n            segMatrix.push([]);\n            cellMatrix.push([]);\n            loneCellMatrix.push([]);\n            // levelCnt might be 1 even though there are no actual levels. protect against this.\n            // this single empty row is useful for styling.\n            if (levelSegs) {\n                for (j = 0; j < levelSegs.length; j++) { // iterate through segments in level\n                    seg = levelSegs[j];\n                    var leftCol = isRtl ? (colCnt - 1 - seg.lastCol) : seg.firstCol;\n                    var rightCol = isRtl ? (colCnt - 1 - seg.firstCol) : seg.lastCol;\n                    emptyCellsUntil(leftCol);\n                    // create a container that occupies or more columns. append the event element.\n                    td = createElement('td', { className: 'fc-event-container' }, seg.el);\n                    if (leftCol !== rightCol) {\n                        td.colSpan = rightCol - leftCol + 1;\n                    }\n                    else { // a single-column segment\n                        loneCellMatrix[i][col] = td;\n                    }\n                    while (col <= rightCol) {\n                        cellMatrix[i][col] = td;\n                        segMatrix[i][col] = seg;\n                        col++;\n                    }\n                    tr.appendChild(td);\n                }\n            }\n            emptyCellsUntil(colCnt); // finish off the row\n            var introHtml = dayGrid.renderProps.renderIntroHtml();\n            if (introHtml) {\n                if (isRtl) {\n                    appendToElement(tr, introHtml);\n                }\n                else {\n                    prependToElement(tr, introHtml);\n                }\n            }\n            tbody.appendChild(tr);\n        }\n        return {\n            row: row,\n            tbodyEl: tbody,\n            cellMatrix: cellMatrix,\n            segMatrix: segMatrix,\n            segLevels: segLevels,\n            segs: rowSegs\n        };\n    };\n    // Stacks a flat array of segments, which are all assumed to be in the same row, into subarrays of vertical levels.\n    // NOTE: modifies segs\n    DayGridEventRenderer.prototype.buildSegLevels = function (segs) {\n        var isRtl = this.context.isRtl;\n        var colCnt = this.dayGrid.colCnt;\n        var levels = [];\n        var i;\n        var seg;\n        var j;\n        // Give preference to elements with certain criteria, so they have\n        // a chance to be closer to the top.\n        segs = this.sortEventSegs(segs);\n        for (i = 0; i < segs.length; i++) {\n            seg = segs[i];\n            // loop through levels, starting with the topmost, until the segment doesn't collide with other segments\n            for (j = 0; j < levels.length; j++) {\n                if (!isDaySegCollision(seg, levels[j])) {\n                    break;\n                }\n            }\n            // `j` now holds the desired subrow index\n            seg.level = j;\n            seg.leftCol = isRtl ? (colCnt - 1 - seg.lastCol) : seg.firstCol; // for sorting only\n            seg.rightCol = isRtl ? (colCnt - 1 - seg.firstCol) : seg.lastCol // for sorting only\n            ;\n            (levels[j] || (levels[j] = [])).push(seg);\n        }\n        // order segments left-to-right. very important if calendar is RTL\n        for (j = 0; j < levels.length; j++) {\n            levels[j].sort(compareDaySegCols);\n        }\n        return levels;\n    };\n    // Given a flat array of segments, return an array of sub-arrays, grouped by each segment's row\n    DayGridEventRenderer.prototype.groupSegRows = function (segs) {\n        var segRows = [];\n        var i;\n        for (i = 0; i < this.dayGrid.rowCnt; i++) {\n            segRows.push([]);\n        }\n        for (i = 0; i < segs.length; i++) {\n            segRows[segs[i].row].push(segs[i]);\n        }\n        return segRows;\n    };\n    // Computes a default `displayEventEnd` value if one is not expliclty defined\n    DayGridEventRenderer.prototype.computeDisplayEventEnd = function () {\n        return this.dayGrid.colCnt === 1; // we'll likely have space if there's only one day\n    };\n    return DayGridEventRenderer;\n}(SimpleDayGridEventRenderer));\n// Computes whether two segments' columns collide. They are assumed to be in the same row.\nfunction isDaySegCollision(seg, otherSegs) {\n    var i;\n    var otherSeg;\n    for (i = 0; i < otherSegs.length; i++) {\n        otherSeg = otherSegs[i];\n        if (otherSeg.firstCol <= seg.lastCol &&\n            otherSeg.lastCol >= seg.firstCol) {\n            return true;\n        }\n    }\n    return false;\n}\n// A cmp function for determining the leftmost event\nfunction compareDaySegCols(a, b) {\n    return a.leftCol - b.leftCol;\n}\n\nvar DayGridMirrorRenderer = /** @class */ (function (_super) {\n    __extends(DayGridMirrorRenderer, _super);\n    function DayGridMirrorRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DayGridMirrorRenderer.prototype.attachSegs = function (segs, mirrorInfo) {\n        var sourceSeg = mirrorInfo.sourceSeg;\n        var rowStructs = this.rowStructs = this.renderSegRows(segs);\n        // inject each new event skeleton into each associated row\n        this.dayGrid.rowEls.forEach(function (rowNode, row) {\n            var skeletonEl = htmlToElement('<div class=\"fc-mirror-skeleton\"><table></table></div>'); // will be absolutely positioned\n            var skeletonTopEl;\n            var skeletonTop;\n            // If there is an original segment, match the top position. Otherwise, put it at the row's top level\n            if (sourceSeg && sourceSeg.row === row) {\n                skeletonTopEl = sourceSeg.el;\n            }\n            else {\n                skeletonTopEl = rowNode.querySelector('.fc-content-skeleton tbody');\n                if (!skeletonTopEl) { // when no events\n                    skeletonTopEl = rowNode.querySelector('.fc-content-skeleton table');\n                }\n            }\n            skeletonTop = skeletonTopEl.getBoundingClientRect().top -\n                rowNode.getBoundingClientRect().top; // the offsetParent origin\n            skeletonEl.style.top = skeletonTop + 'px';\n            skeletonEl.querySelector('table').appendChild(rowStructs[row].tbodyEl);\n            rowNode.appendChild(skeletonEl);\n        });\n    };\n    return DayGridMirrorRenderer;\n}(DayGridEventRenderer));\n\nvar EMPTY_CELL_HTML = '<td style=\"pointer-events:none\"></td>';\nvar DayGridFillRenderer = /** @class */ (function (_super) {\n    __extends(DayGridFillRenderer, _super);\n    function DayGridFillRenderer(dayGrid) {\n        var _this = _super.call(this) || this;\n        _this.fillSegTag = 'td'; // override the default tag name\n        _this.dayGrid = dayGrid;\n        return _this;\n    }\n    DayGridFillRenderer.prototype.renderSegs = function (type, context, segs) {\n        // don't render timed background events\n        if (type === 'bgEvent') {\n            segs = segs.filter(function (seg) {\n                return seg.eventRange.def.allDay;\n            });\n        }\n        _super.prototype.renderSegs.call(this, type, context, segs);\n    };\n    DayGridFillRenderer.prototype.attachSegs = function (type, segs) {\n        var els = [];\n        var i;\n        var seg;\n        var skeletonEl;\n        for (i = 0; i < segs.length; i++) {\n            seg = segs[i];\n            skeletonEl = this.renderFillRow(type, seg);\n            this.dayGrid.rowEls[seg.row].appendChild(skeletonEl);\n            els.push(skeletonEl);\n        }\n        return els;\n    };\n    // Generates the HTML needed for one row of a fill. Requires the seg's el to be rendered.\n    DayGridFillRenderer.prototype.renderFillRow = function (type, seg) {\n        var dayGrid = this.dayGrid;\n        var isRtl = this.context.isRtl;\n        var colCnt = dayGrid.colCnt;\n        var leftCol = isRtl ? (colCnt - 1 - seg.lastCol) : seg.firstCol;\n        var rightCol = isRtl ? (colCnt - 1 - seg.firstCol) : seg.lastCol;\n        var startCol = leftCol;\n        var endCol = rightCol + 1;\n        var className;\n        var skeletonEl;\n        var trEl;\n        if (type === 'businessHours') {\n            className = 'bgevent';\n        }\n        else {\n            className = type.toLowerCase();\n        }\n        skeletonEl = htmlToElement('<div class=\"fc-' + className + '-skeleton\">' +\n            '<table><tr></tr></table>' +\n            '</div>');\n        trEl = skeletonEl.getElementsByTagName('tr')[0];\n        if (startCol > 0) {\n            appendToElement(trEl, \n            // will create (startCol + 1) td's\n            new Array(startCol + 1).join(EMPTY_CELL_HTML));\n        }\n        seg.el.colSpan = endCol - startCol;\n        trEl.appendChild(seg.el);\n        if (endCol < colCnt) {\n            appendToElement(trEl, \n            // will create (colCnt - endCol) td's\n            new Array(colCnt - endCol + 1).join(EMPTY_CELL_HTML));\n        }\n        var introHtml = dayGrid.renderProps.renderIntroHtml();\n        if (introHtml) {\n            if (isRtl) {\n                appendToElement(trEl, introHtml);\n            }\n            else {\n                prependToElement(trEl, introHtml);\n            }\n        }\n        return skeletonEl;\n    };\n    return DayGridFillRenderer;\n}(FillRenderer));\n\nvar DayTile = /** @class */ (function (_super) {\n    __extends(DayTile, _super);\n    function DayTile(el) {\n        var _this = _super.call(this, el) || this;\n        var eventRenderer = _this.eventRenderer = new DayTileEventRenderer(_this);\n        var renderFrame = _this.renderFrame = memoizeRendering(_this._renderFrame);\n        _this.renderFgEvents = memoizeRendering(eventRenderer.renderSegs.bind(eventRenderer), eventRenderer.unrender.bind(eventRenderer), [renderFrame]);\n        _this.renderEventSelection = memoizeRendering(eventRenderer.selectByInstanceId.bind(eventRenderer), eventRenderer.unselectByInstanceId.bind(eventRenderer), [_this.renderFgEvents]);\n        _this.renderEventDrag = memoizeRendering(eventRenderer.hideByHash.bind(eventRenderer), eventRenderer.showByHash.bind(eventRenderer), [renderFrame]);\n        _this.renderEventResize = memoizeRendering(eventRenderer.hideByHash.bind(eventRenderer), eventRenderer.showByHash.bind(eventRenderer), [renderFrame]);\n        return _this;\n    }\n    DayTile.prototype.firstContext = function (context) {\n        context.calendar.registerInteractiveComponent(this, {\n            el: this.el,\n            useEventCenter: false\n        });\n    };\n    DayTile.prototype.render = function (props, context) {\n        this.renderFrame(props.date);\n        this.renderFgEvents(context, props.fgSegs);\n        this.renderEventSelection(props.eventSelection);\n        this.renderEventDrag(props.eventDragInstances);\n        this.renderEventResize(props.eventResizeInstances);\n    };\n    DayTile.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.renderFrame.unrender(); // should unrender everything else\n        this.context.calendar.unregisterInteractiveComponent(this);\n    };\n    DayTile.prototype._renderFrame = function (date) {\n        var _a = this.context, theme = _a.theme, dateEnv = _a.dateEnv, options = _a.options;\n        var title = dateEnv.format(date, createFormatter(options.dayPopoverFormat) // TODO: cache\n        );\n        this.el.innerHTML =\n            '<div class=\"fc-header ' + theme.getClass('popoverHeader') + '\">' +\n                '<span class=\"fc-title\">' +\n                htmlEscape(title) +\n                '</span>' +\n                '<span class=\"fc-close ' + theme.getIconClass('close') + '\"></span>' +\n                '</div>' +\n                '<div class=\"fc-body ' + theme.getClass('popoverContent') + '\">' +\n                '<div class=\"fc-event-container\"></div>' +\n                '</div>';\n        this.segContainerEl = this.el.querySelector('.fc-event-container');\n    };\n    DayTile.prototype.queryHit = function (positionLeft, positionTop, elWidth, elHeight) {\n        var date = this.props.date; // HACK\n        if (positionLeft < elWidth && positionTop < elHeight) {\n            return {\n                component: this,\n                dateSpan: {\n                    allDay: true,\n                    range: { start: date, end: addDays(date, 1) }\n                },\n                dayEl: this.el,\n                rect: {\n                    left: 0,\n                    top: 0,\n                    right: elWidth,\n                    bottom: elHeight\n                },\n                layer: 1\n            };\n        }\n    };\n    return DayTile;\n}(DateComponent));\nvar DayTileEventRenderer = /** @class */ (function (_super) {\n    __extends(DayTileEventRenderer, _super);\n    function DayTileEventRenderer(dayTile) {\n        var _this = _super.call(this) || this;\n        _this.dayTile = dayTile;\n        return _this;\n    }\n    DayTileEventRenderer.prototype.attachSegs = function (segs) {\n        for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n            var seg = segs_1[_i];\n            this.dayTile.segContainerEl.appendChild(seg.el);\n        }\n    };\n    DayTileEventRenderer.prototype.detachSegs = function (segs) {\n        for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {\n            var seg = segs_2[_i];\n            removeElement(seg.el);\n        }\n    };\n    return DayTileEventRenderer;\n}(SimpleDayGridEventRenderer));\n\nvar DayBgRow = /** @class */ (function () {\n    function DayBgRow(context) {\n        this.context = context;\n    }\n    DayBgRow.prototype.renderHtml = function (props) {\n        var parts = [];\n        if (props.renderIntroHtml) {\n            parts.push(props.renderIntroHtml());\n        }\n        for (var _i = 0, _a = props.cells; _i < _a.length; _i++) {\n            var cell = _a[_i];\n            parts.push(renderCellHtml(cell.date, props.dateProfile, this.context, cell.htmlAttrs));\n        }\n        if (!props.cells.length) {\n            parts.push('<td class=\"fc-day ' + this.context.theme.getClass('widgetContent') + '\"></td>');\n        }\n        if (this.context.options.dir === 'rtl') {\n            parts.reverse();\n        }\n        return '<tr>' + parts.join('') + '</tr>';\n    };\n    return DayBgRow;\n}());\nfunction renderCellHtml(date, dateProfile, context, otherAttrs) {\n    var dateEnv = context.dateEnv, theme = context.theme;\n    var isDateValid = rangeContainsMarker(dateProfile.activeRange, date); // TODO: called too frequently. cache somehow.\n    var classes = getDayClasses(date, dateProfile, context);\n    classes.unshift('fc-day', theme.getClass('widgetContent'));\n    return '<td class=\"' + classes.join(' ') + '\"' +\n        (isDateValid ?\n            ' data-date=\"' + dateEnv.formatIso(date, { omitTime: true }) + '\"' :\n            '') +\n        (otherAttrs ?\n            ' ' + otherAttrs :\n            '') +\n        '></td>';\n}\n\nvar DAY_NUM_FORMAT = createFormatter({ day: 'numeric' });\nvar WEEK_NUM_FORMAT = createFormatter({ week: 'numeric' });\nvar DayGrid = /** @class */ (function (_super) {\n    __extends(DayGrid, _super);\n    function DayGrid(el, renderProps) {\n        var _this = _super.call(this, el) || this;\n        _this.bottomCoordPadding = 0; // hack for extending the hit area for the last row of the coordinate grid\n        _this.isCellSizesDirty = false;\n        _this.renderProps = renderProps;\n        var eventRenderer = _this.eventRenderer = new DayGridEventRenderer(_this);\n        var fillRenderer = _this.fillRenderer = new DayGridFillRenderer(_this);\n        _this.mirrorRenderer = new DayGridMirrorRenderer(_this);\n        var renderCells = _this.renderCells = memoizeRendering(_this._renderCells, _this._unrenderCells);\n        _this.renderBusinessHours = memoizeRendering(fillRenderer.renderSegs.bind(fillRenderer, 'businessHours'), fillRenderer.unrender.bind(fillRenderer, 'businessHours'), [renderCells]);\n        _this.renderDateSelection = memoizeRendering(fillRenderer.renderSegs.bind(fillRenderer, 'highlight'), fillRenderer.unrender.bind(fillRenderer, 'highlight'), [renderCells]);\n        _this.renderBgEvents = memoizeRendering(fillRenderer.renderSegs.bind(fillRenderer, 'bgEvent'), fillRenderer.unrender.bind(fillRenderer, 'bgEvent'), [renderCells]);\n        _this.renderFgEvents = memoizeRendering(eventRenderer.renderSegs.bind(eventRenderer), eventRenderer.unrender.bind(eventRenderer), [renderCells]);\n        _this.renderEventSelection = memoizeRendering(eventRenderer.selectByInstanceId.bind(eventRenderer), eventRenderer.unselectByInstanceId.bind(eventRenderer), [_this.renderFgEvents]);\n        _this.renderEventDrag = memoizeRendering(_this._renderEventDrag, _this._unrenderEventDrag, [renderCells]);\n        _this.renderEventResize = memoizeRendering(_this._renderEventResize, _this._unrenderEventResize, [renderCells]);\n        return _this;\n    }\n    DayGrid.prototype.render = function (props, context) {\n        var cells = props.cells;\n        this.rowCnt = cells.length;\n        this.colCnt = cells[0].length;\n        this.renderCells(cells, props.isRigid);\n        this.renderBusinessHours(context, props.businessHourSegs);\n        this.renderDateSelection(context, props.dateSelectionSegs);\n        this.renderBgEvents(context, props.bgEventSegs);\n        this.renderFgEvents(context, props.fgEventSegs);\n        this.renderEventSelection(props.eventSelection);\n        this.renderEventDrag(props.eventDrag);\n        this.renderEventResize(props.eventResize);\n        if (this.segPopoverTile) {\n            this.updateSegPopoverTile();\n        }\n    };\n    DayGrid.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.renderCells.unrender(); // will unrender everything else\n    };\n    DayGrid.prototype.getCellRange = function (row, col) {\n        var start = this.props.cells[row][col].date;\n        var end = addDays(start, 1);\n        return { start: start, end: end };\n    };\n    DayGrid.prototype.updateSegPopoverTile = function (date, segs) {\n        var ownProps = this.props;\n        this.segPopoverTile.receiveProps({\n            date: date || this.segPopoverTile.props.date,\n            fgSegs: segs || this.segPopoverTile.props.fgSegs,\n            eventSelection: ownProps.eventSelection,\n            eventDragInstances: ownProps.eventDrag ? ownProps.eventDrag.affectedInstances : null,\n            eventResizeInstances: ownProps.eventResize ? ownProps.eventResize.affectedInstances : null\n        }, this.context);\n    };\n    /* Date Rendering\n    ------------------------------------------------------------------------------------------------------------------*/\n    DayGrid.prototype._renderCells = function (cells, isRigid) {\n        var _a = this.context, calendar = _a.calendar, view = _a.view, isRtl = _a.isRtl, dateEnv = _a.dateEnv;\n        var _b = this, rowCnt = _b.rowCnt, colCnt = _b.colCnt;\n        var html = '';\n        var row;\n        var col;\n        for (row = 0; row < rowCnt; row++) {\n            html += this.renderDayRowHtml(row, isRigid);\n        }\n        this.el.innerHTML = html;\n        this.rowEls = findElements(this.el, '.fc-row');\n        this.cellEls = findElements(this.el, '.fc-day, .fc-disabled-day');\n        if (isRtl) {\n            this.cellEls.reverse();\n        }\n        this.rowPositions = new PositionCache(this.el, this.rowEls, false, true // vertical\n        );\n        this.colPositions = new PositionCache(this.el, this.cellEls.slice(0, colCnt), // only the first row\n        true, false // horizontal\n        );\n        // trigger dayRender with each cell's element\n        for (row = 0; row < rowCnt; row++) {\n            for (col = 0; col < colCnt; col++) {\n                calendar.publiclyTrigger('dayRender', [\n                    {\n                        date: dateEnv.toDate(cells[row][col].date),\n                        el: this.getCellEl(row, col),\n                        view: view\n                    }\n                ]);\n            }\n        }\n        this.isCellSizesDirty = true;\n    };\n    DayGrid.prototype._unrenderCells = function () {\n        this.removeSegPopover();\n    };\n    // Generates the HTML for a single row, which is a div that wraps a table.\n    // `row` is the row number.\n    DayGrid.prototype.renderDayRowHtml = function (row, isRigid) {\n        var theme = this.context.theme;\n        var classes = ['fc-row', 'fc-week', theme.getClass('dayRow')];\n        if (isRigid) {\n            classes.push('fc-rigid');\n        }\n        var bgRow = new DayBgRow(this.context);\n        return '' +\n            '<div class=\"' + classes.join(' ') + '\">' +\n            '<div class=\"fc-bg\">' +\n            '<table class=\"' + theme.getClass('tableGrid') + '\">' +\n            bgRow.renderHtml({\n                cells: this.props.cells[row],\n                dateProfile: this.props.dateProfile,\n                renderIntroHtml: this.renderProps.renderBgIntroHtml\n            }) +\n            '</table>' +\n            '</div>' +\n            '<div class=\"fc-content-skeleton\">' +\n            '<table>' +\n            (this.getIsNumbersVisible() ?\n                '<thead>' +\n                    this.renderNumberTrHtml(row) +\n                    '</thead>' :\n                '') +\n            '</table>' +\n            '</div>' +\n            '</div>';\n    };\n    DayGrid.prototype.getIsNumbersVisible = function () {\n        return this.getIsDayNumbersVisible() ||\n            this.renderProps.cellWeekNumbersVisible ||\n            this.renderProps.colWeekNumbersVisible;\n    };\n    DayGrid.prototype.getIsDayNumbersVisible = function () {\n        return this.rowCnt > 1;\n    };\n    /* Grid Number Rendering\n    ------------------------------------------------------------------------------------------------------------------*/\n    DayGrid.prototype.renderNumberTrHtml = function (row) {\n        var isRtl = this.context.isRtl;\n        var intro = this.renderProps.renderNumberIntroHtml(row, this);\n        return '' +\n            '<tr>' +\n            (isRtl ? '' : intro) +\n            this.renderNumberCellsHtml(row) +\n            (isRtl ? intro : '') +\n            '</tr>';\n    };\n    DayGrid.prototype.renderNumberCellsHtml = function (row) {\n        var htmls = [];\n        var col;\n        var date;\n        for (col = 0; col < this.colCnt; col++) {\n            date = this.props.cells[row][col].date;\n            htmls.push(this.renderNumberCellHtml(date));\n        }\n        if (this.context.isRtl) {\n            htmls.reverse();\n        }\n        return htmls.join('');\n    };\n    // Generates the HTML for the <td>s of the \"number\" row in the DayGrid's content skeleton.\n    // The number row will only exist if either day numbers or week numbers are turned on.\n    DayGrid.prototype.renderNumberCellHtml = function (date) {\n        var _a = this.context, dateEnv = _a.dateEnv, options = _a.options;\n        var html = '';\n        var isDateValid = rangeContainsMarker(this.props.dateProfile.activeRange, date); // TODO: called too frequently. cache somehow.\n        var isDayNumberVisible = this.getIsDayNumbersVisible() && isDateValid;\n        var classes;\n        var weekCalcFirstDow;\n        if (!isDayNumberVisible && !this.renderProps.cellWeekNumbersVisible) {\n            // no numbers in day cell (week number must be along the side)\n            return '<td></td>'; //  will create an empty space above events :(\n        }\n        classes = getDayClasses(date, this.props.dateProfile, this.context);\n        classes.unshift('fc-day-top');\n        if (this.renderProps.cellWeekNumbersVisible) {\n            weekCalcFirstDow = dateEnv.weekDow;\n        }\n        html += '<td class=\"' + classes.join(' ') + '\"' +\n            (isDateValid ?\n                ' data-date=\"' + dateEnv.formatIso(date, { omitTime: true }) + '\"' :\n                '') +\n            '>';\n        if (this.renderProps.cellWeekNumbersVisible && (date.getUTCDay() === weekCalcFirstDow)) {\n            html += buildGotoAnchorHtml(options, dateEnv, { date: date, type: 'week' }, { 'class': 'fc-week-number' }, dateEnv.format(date, WEEK_NUM_FORMAT) // inner HTML\n            );\n        }\n        if (isDayNumberVisible) {\n            html += buildGotoAnchorHtml(options, dateEnv, date, { 'class': 'fc-day-number' }, dateEnv.format(date, DAY_NUM_FORMAT) // inner HTML\n            );\n        }\n        html += '</td>';\n        return html;\n    };\n    /* Sizing\n    ------------------------------------------------------------------------------------------------------------------*/\n    DayGrid.prototype.updateSize = function (isResize) {\n        var calendar = this.context.calendar;\n        var _a = this, fillRenderer = _a.fillRenderer, eventRenderer = _a.eventRenderer, mirrorRenderer = _a.mirrorRenderer;\n        if (isResize ||\n            this.isCellSizesDirty ||\n            calendar.isEventsUpdated // hack\n        ) {\n            this.buildPositionCaches();\n            this.isCellSizesDirty = false;\n        }\n        fillRenderer.computeSizes(isResize);\n        eventRenderer.computeSizes(isResize);\n        mirrorRenderer.computeSizes(isResize);\n        fillRenderer.assignSizes(isResize);\n        eventRenderer.assignSizes(isResize);\n        mirrorRenderer.assignSizes(isResize);\n    };\n    DayGrid.prototype.buildPositionCaches = function () {\n        this.buildColPositions();\n        this.buildRowPositions();\n    };\n    DayGrid.prototype.buildColPositions = function () {\n        this.colPositions.build();\n    };\n    DayGrid.prototype.buildRowPositions = function () {\n        this.rowPositions.build();\n        this.rowPositions.bottoms[this.rowCnt - 1] += this.bottomCoordPadding; // hack\n    };\n    /* Hit System\n    ------------------------------------------------------------------------------------------------------------------*/\n    DayGrid.prototype.positionToHit = function (leftPosition, topPosition) {\n        var _a = this, colPositions = _a.colPositions, rowPositions = _a.rowPositions;\n        var col = colPositions.leftToIndex(leftPosition);\n        var row = rowPositions.topToIndex(topPosition);\n        if (row != null && col != null) {\n            return {\n                row: row,\n                col: col,\n                dateSpan: {\n                    range: this.getCellRange(row, col),\n                    allDay: true\n                },\n                dayEl: this.getCellEl(row, col),\n                relativeRect: {\n                    left: colPositions.lefts[col],\n                    right: colPositions.rights[col],\n                    top: rowPositions.tops[row],\n                    bottom: rowPositions.bottoms[row]\n                }\n            };\n        }\n    };\n    /* Cell System\n    ------------------------------------------------------------------------------------------------------------------*/\n    // FYI: the first column is the leftmost column, regardless of date\n    DayGrid.prototype.getCellEl = function (row, col) {\n        return this.cellEls[row * this.colCnt + col];\n    };\n    /* Event Drag Visualization\n    ------------------------------------------------------------------------------------------------------------------*/\n    DayGrid.prototype._renderEventDrag = function (state) {\n        if (state) {\n            this.eventRenderer.hideByHash(state.affectedInstances);\n            this.fillRenderer.renderSegs('highlight', this.context, state.segs);\n        }\n    };\n    DayGrid.prototype._unrenderEventDrag = function (state) {\n        if (state) {\n            this.eventRenderer.showByHash(state.affectedInstances);\n            this.fillRenderer.unrender('highlight', this.context);\n        }\n    };\n    /* Event Resize Visualization\n    ------------------------------------------------------------------------------------------------------------------*/\n    DayGrid.prototype._renderEventResize = function (state) {\n        if (state) {\n            this.eventRenderer.hideByHash(state.affectedInstances);\n            this.fillRenderer.renderSegs('highlight', this.context, state.segs);\n            this.mirrorRenderer.renderSegs(this.context, state.segs, { isResizing: true, sourceSeg: state.sourceSeg });\n        }\n    };\n    DayGrid.prototype._unrenderEventResize = function (state) {\n        if (state) {\n            this.eventRenderer.showByHash(state.affectedInstances);\n            this.fillRenderer.unrender('highlight', this.context);\n            this.mirrorRenderer.unrender(this.context, state.segs, { isResizing: true, sourceSeg: state.sourceSeg });\n        }\n    };\n    /* More+ Link Popover\n    ------------------------------------------------------------------------------------------------------------------*/\n    DayGrid.prototype.removeSegPopover = function () {\n        if (this.segPopover) {\n            this.segPopover.hide(); // in handler, will call segPopover's removeElement\n        }\n    };\n    // Limits the number of \"levels\" (vertically stacking layers of events) for each row of the grid.\n    // `levelLimit` can be false (don't limit), a number, or true (should be computed).\n    DayGrid.prototype.limitRows = function (levelLimit) {\n        var rowStructs = this.eventRenderer.rowStructs || [];\n        var row; // row #\n        var rowLevelLimit;\n        for (row = 0; row < rowStructs.length; row++) {\n            this.unlimitRow(row);\n            if (!levelLimit) {\n                rowLevelLimit = false;\n            }\n            else if (typeof levelLimit === 'number') {\n                rowLevelLimit = levelLimit;\n            }\n            else {\n                rowLevelLimit = this.computeRowLevelLimit(row);\n            }\n            if (rowLevelLimit !== false) {\n                this.limitRow(row, rowLevelLimit);\n            }\n        }\n    };\n    // Computes the number of levels a row will accomodate without going outside its bounds.\n    // Assumes the row is \"rigid\" (maintains a constant height regardless of what is inside).\n    // `row` is the row number.\n    DayGrid.prototype.computeRowLevelLimit = function (row) {\n        var rowEl = this.rowEls[row]; // the containing \"fake\" row div\n        var rowBottom = rowEl.getBoundingClientRect().bottom; // relative to viewport!\n        var trEls = findChildren(this.eventRenderer.rowStructs[row].tbodyEl);\n        var i;\n        var trEl;\n        // Reveal one level <tr> at a time and stop when we find one out of bounds\n        for (i = 0; i < trEls.length; i++) {\n            trEl = trEls[i];\n            trEl.classList.remove('fc-limited'); // reset to original state (reveal)\n            if (trEl.getBoundingClientRect().bottom > rowBottom) {\n                return i;\n            }\n        }\n        return false; // should not limit at all\n    };\n    // Limits the given grid row to the maximum number of levels and injects \"more\" links if necessary.\n    // `row` is the row number.\n    // `levelLimit` is a number for the maximum (inclusive) number of levels allowed.\n    DayGrid.prototype.limitRow = function (row, levelLimit) {\n        var _this = this;\n        var colCnt = this.colCnt;\n        var isRtl = this.context.isRtl;\n        var rowStruct = this.eventRenderer.rowStructs[row];\n        var moreNodes = []; // array of \"more\" <a> links and <td> DOM nodes\n        var col = 0; // col #, left-to-right (not chronologically)\n        var levelSegs; // array of segment objects in the last allowable level, ordered left-to-right\n        var cellMatrix; // a matrix (by level, then column) of all <td> elements in the row\n        var limitedNodes; // array of temporarily hidden level <tr> and segment <td> DOM nodes\n        var i;\n        var seg;\n        var segsBelow; // array of segment objects below `seg` in the current `col`\n        var totalSegsBelow; // total number of segments below `seg` in any of the columns `seg` occupies\n        var colSegsBelow; // array of segment arrays, below seg, one for each column (offset from segs's first column)\n        var td;\n        var rowSpan;\n        var segMoreNodes; // array of \"more\" <td> cells that will stand-in for the current seg's cell\n        var j;\n        var moreTd;\n        var moreWrap;\n        var moreLink;\n        // Iterates through empty level cells and places \"more\" links inside if need be\n        var emptyCellsUntil = function (endCol) {\n            while (col < endCol) {\n                segsBelow = _this.getCellSegs(row, col, levelLimit);\n                if (segsBelow.length) {\n                    td = cellMatrix[levelLimit - 1][col];\n                    moreLink = _this.renderMoreLink(row, col, segsBelow);\n                    moreWrap = createElement('div', null, moreLink);\n                    td.appendChild(moreWrap);\n                    moreNodes.push(moreWrap);\n                }\n                col++;\n            }\n        };\n        if (levelLimit && levelLimit < rowStruct.segLevels.length) { // is it actually over the limit?\n            levelSegs = rowStruct.segLevels[levelLimit - 1];\n            cellMatrix = rowStruct.cellMatrix;\n            limitedNodes = findChildren(rowStruct.tbodyEl).slice(levelLimit); // get level <tr> elements past the limit\n            limitedNodes.forEach(function (node) {\n                node.classList.add('fc-limited'); // hide elements and get a simple DOM-nodes array\n            });\n            // iterate though segments in the last allowable level\n            for (i = 0; i < levelSegs.length; i++) {\n                seg = levelSegs[i];\n                var leftCol = isRtl ? (colCnt - 1 - seg.lastCol) : seg.firstCol;\n                var rightCol = isRtl ? (colCnt - 1 - seg.firstCol) : seg.lastCol;\n                emptyCellsUntil(leftCol); // process empty cells before the segment\n                // determine *all* segments below `seg` that occupy the same columns\n                colSegsBelow = [];\n                totalSegsBelow = 0;\n                while (col <= rightCol) {\n                    segsBelow = this.getCellSegs(row, col, levelLimit);\n                    colSegsBelow.push(segsBelow);\n                    totalSegsBelow += segsBelow.length;\n                    col++;\n                }\n                if (totalSegsBelow) { // do we need to replace this segment with one or many \"more\" links?\n                    td = cellMatrix[levelLimit - 1][leftCol]; // the segment's parent cell\n                    rowSpan = td.rowSpan || 1;\n                    segMoreNodes = [];\n                    // make a replacement <td> for each column the segment occupies. will be one for each colspan\n                    for (j = 0; j < colSegsBelow.length; j++) {\n                        moreTd = createElement('td', { className: 'fc-more-cell', rowSpan: rowSpan });\n                        segsBelow = colSegsBelow[j];\n                        moreLink = this.renderMoreLink(row, leftCol + j, [seg].concat(segsBelow) // count seg as hidden too\n                        );\n                        moreWrap = createElement('div', null, moreLink);\n                        moreTd.appendChild(moreWrap);\n                        segMoreNodes.push(moreTd);\n                        moreNodes.push(moreTd);\n                    }\n                    td.classList.add('fc-limited');\n                    insertAfterElement(td, segMoreNodes);\n                    limitedNodes.push(td);\n                }\n            }\n            emptyCellsUntil(this.colCnt); // finish off the level\n            rowStruct.moreEls = moreNodes; // for easy undoing later\n            rowStruct.limitedEls = limitedNodes; // for easy undoing later\n        }\n    };\n    // Reveals all levels and removes all \"more\"-related elements for a grid's row.\n    // `row` is a row number.\n    DayGrid.prototype.unlimitRow = function (row) {\n        var rowStruct = this.eventRenderer.rowStructs[row];\n        if (rowStruct.moreEls) {\n            rowStruct.moreEls.forEach(removeElement);\n            rowStruct.moreEls = null;\n        }\n        if (rowStruct.limitedEls) {\n            rowStruct.limitedEls.forEach(function (limitedEl) {\n                limitedEl.classList.remove('fc-limited');\n            });\n            rowStruct.limitedEls = null;\n        }\n    };\n    // Renders an <a> element that represents hidden event element for a cell.\n    // Responsible for attaching click handler as well.\n    DayGrid.prototype.renderMoreLink = function (row, col, hiddenSegs) {\n        var _this = this;\n        var _a = this.context, calendar = _a.calendar, view = _a.view, dateEnv = _a.dateEnv, options = _a.options, isRtl = _a.isRtl;\n        var a = createElement('a', { className: 'fc-more' });\n        a.innerText = this.getMoreLinkText(hiddenSegs.length);\n        a.addEventListener('click', function (ev) {\n            var clickOption = options.eventLimitClick;\n            var _col = isRtl ? _this.colCnt - col - 1 : col; // HACK: props.cells has different dir system?\n            var date = _this.props.cells[row][_col].date;\n            var moreEl = ev.currentTarget;\n            var dayEl = _this.getCellEl(row, col);\n            var allSegs = _this.getCellSegs(row, col);\n            // rescope the segments to be within the cell's date\n            var reslicedAllSegs = _this.resliceDaySegs(allSegs, date);\n            var reslicedHiddenSegs = _this.resliceDaySegs(hiddenSegs, date);\n            if (typeof clickOption === 'function') {\n                // the returned value can be an atomic option\n                clickOption = calendar.publiclyTrigger('eventLimitClick', [\n                    {\n                        date: dateEnv.toDate(date),\n                        allDay: true,\n                        dayEl: dayEl,\n                        moreEl: moreEl,\n                        segs: reslicedAllSegs,\n                        hiddenSegs: reslicedHiddenSegs,\n                        jsEvent: ev,\n                        view: view\n                    }\n                ]);\n            }\n            if (clickOption === 'popover') {\n                _this.showSegPopover(row, col, moreEl, reslicedAllSegs);\n            }\n            else if (typeof clickOption === 'string') { // a view name\n                calendar.zoomTo(date, clickOption);\n            }\n        });\n        return a;\n    };\n    // Reveals the popover that displays all events within a cell\n    DayGrid.prototype.showSegPopover = function (row, col, moreLink, segs) {\n        var _this = this;\n        var _a = this.context, calendar = _a.calendar, view = _a.view, theme = _a.theme, isRtl = _a.isRtl;\n        var _col = isRtl ? this.colCnt - col - 1 : col; // HACK: props.cells has different dir system?\n        var moreWrap = moreLink.parentNode; // the <div> wrapper around the <a>\n        var topEl; // the element we want to match the top coordinate of\n        var options;\n        if (this.rowCnt === 1) {\n            topEl = view.el; // will cause the popover to cover any sort of header\n        }\n        else {\n            topEl = this.rowEls[row]; // will align with top of row\n        }\n        options = {\n            className: 'fc-more-popover ' + theme.getClass('popover'),\n            parentEl: view.el,\n            top: computeRect(topEl).top,\n            autoHide: true,\n            content: function (el) {\n                _this.segPopoverTile = new DayTile(el);\n                _this.updateSegPopoverTile(_this.props.cells[row][_col].date, segs);\n            },\n            hide: function () {\n                _this.segPopoverTile.destroy();\n                _this.segPopoverTile = null;\n                _this.segPopover.destroy();\n                _this.segPopover = null;\n            }\n        };\n        // Determine horizontal coordinate.\n        // We use the moreWrap instead of the <td> to avoid border confusion.\n        if (isRtl) {\n            options.right = computeRect(moreWrap).right + 1; // +1 to be over cell border\n        }\n        else {\n            options.left = computeRect(moreWrap).left - 1; // -1 to be over cell border\n        }\n        this.segPopover = new Popover(options);\n        this.segPopover.show();\n        calendar.releaseAfterSizingTriggers(); // hack for eventPositioned\n    };\n    // Given the events within an array of segment objects, reslice them to be in a single day\n    DayGrid.prototype.resliceDaySegs = function (segs, dayDate) {\n        var dayStart = dayDate;\n        var dayEnd = addDays(dayStart, 1);\n        var dayRange = { start: dayStart, end: dayEnd };\n        var newSegs = [];\n        for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n            var seg = segs_1[_i];\n            var eventRange = seg.eventRange;\n            var origRange = eventRange.range;\n            var slicedRange = intersectRanges(origRange, dayRange);\n            if (slicedRange) {\n                newSegs.push(__assign({}, seg, { eventRange: {\n                        def: eventRange.def,\n                        ui: __assign({}, eventRange.ui, { durationEditable: false }),\n                        instance: eventRange.instance,\n                        range: slicedRange\n                    }, isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(), isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf() }));\n            }\n        }\n        return newSegs;\n    };\n    // Generates the text that should be inside a \"more\" link, given the number of events it represents\n    DayGrid.prototype.getMoreLinkText = function (num) {\n        var opt = this.context.options.eventLimitText;\n        if (typeof opt === 'function') {\n            return opt(num);\n        }\n        else {\n            return '+' + num + ' ' + opt;\n        }\n    };\n    // Returns segments within a given cell.\n    // If `startLevel` is specified, returns only events including and below that level. Otherwise returns all segs.\n    DayGrid.prototype.getCellSegs = function (row, col, startLevel) {\n        var segMatrix = this.eventRenderer.rowStructs[row].segMatrix;\n        var level = startLevel || 0;\n        var segs = [];\n        var seg;\n        while (level < segMatrix.length) {\n            seg = segMatrix[level][col];\n            if (seg) {\n                segs.push(seg);\n            }\n            level++;\n        }\n        return segs;\n    };\n    return DayGrid;\n}(DateComponent));\n\nvar WEEK_NUM_FORMAT$1 = createFormatter({ week: 'numeric' });\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a DayGrid subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\nvar AbstractDayGridView = /** @class */ (function (_super) {\n    __extends(AbstractDayGridView, _super);\n    function AbstractDayGridView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.processOptions = memoize(_this._processOptions);\n        _this.renderSkeleton = memoizeRendering(_this._renderSkeleton, _this._unrenderSkeleton);\n        /* Header Rendering\n        ------------------------------------------------------------------------------------------------------------------*/\n        // Generates the HTML that will go before the day-of week header cells\n        _this.renderHeadIntroHtml = function () {\n            var _a = _this.context, theme = _a.theme, options = _a.options;\n            if (_this.colWeekNumbersVisible) {\n                return '' +\n                    '<th class=\"fc-week-number ' + theme.getClass('widgetHeader') + '\" ' + _this.weekNumberStyleAttr() + '>' +\n                    '<span>' + // needed for matchCellWidths\n                    htmlEscape(options.weekLabel) +\n                    '</span>' +\n                    '</th>';\n            }\n            return '';\n        };\n        /* Day Grid Rendering\n        ------------------------------------------------------------------------------------------------------------------*/\n        // Generates the HTML that will go before content-skeleton cells that display the day/week numbers\n        _this.renderDayGridNumberIntroHtml = function (row, dayGrid) {\n            var _a = _this.context, options = _a.options, dateEnv = _a.dateEnv;\n            var weekStart = dayGrid.props.cells[row][0].date;\n            if (_this.colWeekNumbersVisible) {\n                return '' +\n                    '<td class=\"fc-week-number\" ' + _this.weekNumberStyleAttr() + '>' +\n                    buildGotoAnchorHtml(// aside from link, important for matchCellWidths\n                    options, dateEnv, { date: weekStart, type: 'week', forceOff: dayGrid.colCnt === 1 }, dateEnv.format(weekStart, WEEK_NUM_FORMAT$1) // inner HTML\n                    ) +\n                    '</td>';\n            }\n            return '';\n        };\n        // Generates the HTML that goes before the day bg cells for each day-row\n        _this.renderDayGridBgIntroHtml = function () {\n            var theme = _this.context.theme;\n            if (_this.colWeekNumbersVisible) {\n                return '<td class=\"fc-week-number ' + theme.getClass('widgetContent') + '\" ' + _this.weekNumberStyleAttr() + '></td>';\n            }\n            return '';\n        };\n        // Generates the HTML that goes before every other type of row generated by DayGrid.\n        // Affects mirror-skeleton and highlight-skeleton rows.\n        _this.renderDayGridIntroHtml = function () {\n            if (_this.colWeekNumbersVisible) {\n                return '<td class=\"fc-week-number\" ' + _this.weekNumberStyleAttr() + '></td>';\n            }\n            return '';\n        };\n        return _this;\n    }\n    AbstractDayGridView.prototype._processOptions = function (options) {\n        if (options.weekNumbers) {\n            if (options.weekNumbersWithinDays) {\n                this.cellWeekNumbersVisible = true;\n                this.colWeekNumbersVisible = false;\n            }\n            else {\n                this.cellWeekNumbersVisible = false;\n                this.colWeekNumbersVisible = true;\n            }\n        }\n        else {\n            this.colWeekNumbersVisible = false;\n            this.cellWeekNumbersVisible = false;\n        }\n    };\n    AbstractDayGridView.prototype.render = function (props, context) {\n        _super.prototype.render.call(this, props, context);\n        this.processOptions(context.options);\n        this.renderSkeleton(context);\n    };\n    AbstractDayGridView.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.renderSkeleton.unrender();\n    };\n    AbstractDayGridView.prototype._renderSkeleton = function (context) {\n        this.el.classList.add('fc-dayGrid-view');\n        this.el.innerHTML = this.renderSkeletonHtml();\n        this.scroller = new ScrollComponent('hidden', // overflow x\n        'auto' // overflow y\n        );\n        var dayGridContainerEl = this.scroller.el;\n        this.el.querySelector('.fc-body > tr > td').appendChild(dayGridContainerEl);\n        dayGridContainerEl.classList.add('fc-day-grid-container');\n        var dayGridEl = createElement('div', { className: 'fc-day-grid' });\n        dayGridContainerEl.appendChild(dayGridEl);\n        this.dayGrid = new DayGrid(dayGridEl, {\n            renderNumberIntroHtml: this.renderDayGridNumberIntroHtml,\n            renderBgIntroHtml: this.renderDayGridBgIntroHtml,\n            renderIntroHtml: this.renderDayGridIntroHtml,\n            colWeekNumbersVisible: this.colWeekNumbersVisible,\n            cellWeekNumbersVisible: this.cellWeekNumbersVisible\n        });\n    };\n    AbstractDayGridView.prototype._unrenderSkeleton = function () {\n        this.el.classList.remove('fc-dayGrid-view');\n        this.dayGrid.destroy();\n        this.scroller.destroy();\n    };\n    // Builds the HTML skeleton for the view.\n    // The day-grid component will render inside of a container defined by this HTML.\n    AbstractDayGridView.prototype.renderSkeletonHtml = function () {\n        var _a = this.context, theme = _a.theme, options = _a.options;\n        return '' +\n            '<table class=\"' + theme.getClass('tableGrid') + '\">' +\n            (options.columnHeader ?\n                '<thead class=\"fc-head\">' +\n                    '<tr>' +\n                    '<td class=\"fc-head-container ' + theme.getClass('widgetHeader') + '\">&nbsp;</td>' +\n                    '</tr>' +\n                    '</thead>' :\n                '') +\n            '<tbody class=\"fc-body\">' +\n            '<tr>' +\n            '<td class=\"' + theme.getClass('widgetContent') + '\"></td>' +\n            '</tr>' +\n            '</tbody>' +\n            '</table>';\n    };\n    // Generates an HTML attribute string for setting the width of the week number column, if it is known\n    AbstractDayGridView.prototype.weekNumberStyleAttr = function () {\n        if (this.weekNumberWidth != null) {\n            return 'style=\"width:' + this.weekNumberWidth + 'px\"';\n        }\n        return '';\n    };\n    // Determines whether each row should have a constant height\n    AbstractDayGridView.prototype.hasRigidRows = function () {\n        var eventLimit = this.context.options.eventLimit;\n        return eventLimit && typeof eventLimit !== 'number';\n    };\n    /* Dimensions\n    ------------------------------------------------------------------------------------------------------------------*/\n    AbstractDayGridView.prototype.updateSize = function (isResize, viewHeight, isAuto) {\n        _super.prototype.updateSize.call(this, isResize, viewHeight, isAuto); // will call updateBaseSize. important that executes first\n        this.dayGrid.updateSize(isResize);\n    };\n    // Refreshes the horizontal dimensions of the view\n    AbstractDayGridView.prototype.updateBaseSize = function (isResize, viewHeight, isAuto) {\n        var dayGrid = this.dayGrid;\n        var eventLimit = this.context.options.eventLimit;\n        var headRowEl = this.header ? this.header.el : null; // HACK\n        var scrollerHeight;\n        var scrollbarWidths;\n        // hack to give the view some height prior to dayGrid's columns being rendered\n        // TODO: separate setting height from scroller VS dayGrid.\n        if (!dayGrid.rowEls) {\n            if (!isAuto) {\n                scrollerHeight = this.computeScrollerHeight(viewHeight);\n                this.scroller.setHeight(scrollerHeight);\n            }\n            return;\n        }\n        if (this.colWeekNumbersVisible) {\n            // Make sure all week number cells running down the side have the same width.\n            this.weekNumberWidth = matchCellWidths(findElements(this.el, '.fc-week-number'));\n        }\n        // reset all heights to be natural\n        this.scroller.clear();\n        if (headRowEl) {\n            uncompensateScroll(headRowEl);\n        }\n        dayGrid.removeSegPopover(); // kill the \"more\" popover if displayed\n        // is the event limit a constant level number?\n        if (eventLimit && typeof eventLimit === 'number') {\n            dayGrid.limitRows(eventLimit); // limit the levels first so the height can redistribute after\n        }\n        // distribute the height to the rows\n        // (viewHeight is a \"recommended\" value if isAuto)\n        scrollerHeight = this.computeScrollerHeight(viewHeight);\n        this.setGridHeight(scrollerHeight, isAuto);\n        // is the event limit dynamically calculated?\n        if (eventLimit && typeof eventLimit !== 'number') {\n            dayGrid.limitRows(eventLimit); // limit the levels after the grid's row heights have been set\n        }\n        if (!isAuto) { // should we force dimensions of the scroll container?\n            this.scroller.setHeight(scrollerHeight);\n            scrollbarWidths = this.scroller.getScrollbarWidths();\n            if (scrollbarWidths.left || scrollbarWidths.right) { // using scrollbars?\n                if (headRowEl) {\n                    compensateScroll(headRowEl, scrollbarWidths);\n                }\n                // doing the scrollbar compensation might have created text overflow which created more height. redo\n                scrollerHeight = this.computeScrollerHeight(viewHeight);\n                this.scroller.setHeight(scrollerHeight);\n            }\n            // guarantees the same scrollbar widths\n            this.scroller.lockOverflow(scrollbarWidths);\n        }\n    };\n    // given a desired total height of the view, returns what the height of the scroller should be\n    AbstractDayGridView.prototype.computeScrollerHeight = function (viewHeight) {\n        return viewHeight -\n            subtractInnerElHeight(this.el, this.scroller.el); // everything that's NOT the scroller\n    };\n    // Sets the height of just the DayGrid component in this view\n    AbstractDayGridView.prototype.setGridHeight = function (height, isAuto) {\n        if (this.context.options.monthMode) {\n            // if auto, make the height of each row the height that it would be if there were 6 weeks\n            if (isAuto) {\n                height *= this.dayGrid.rowCnt / 6;\n            }\n            distributeHeight(this.dayGrid.rowEls, height, !isAuto); // if auto, don't compensate for height-hogging rows\n        }\n        else {\n            if (isAuto) {\n                undistributeHeight(this.dayGrid.rowEls); // let the rows be their natural height with no expanding\n            }\n            else {\n                distributeHeight(this.dayGrid.rowEls, height, true); // true = compensate for height-hogging rows\n            }\n        }\n    };\n    /* Scroll\n    ------------------------------------------------------------------------------------------------------------------*/\n    AbstractDayGridView.prototype.computeDateScroll = function (duration) {\n        return { top: 0 };\n    };\n    AbstractDayGridView.prototype.queryDateScroll = function () {\n        return { top: this.scroller.getScrollTop() };\n    };\n    AbstractDayGridView.prototype.applyDateScroll = function (scroll) {\n        if (scroll.top !== undefined) {\n            this.scroller.setScrollTop(scroll.top);\n        }\n    };\n    return AbstractDayGridView;\n}(View));\nAbstractDayGridView.prototype.dateProfileGeneratorClass = DayGridDateProfileGenerator;\n\nvar SimpleDayGrid = /** @class */ (function (_super) {\n    __extends(SimpleDayGrid, _super);\n    function SimpleDayGrid(dayGrid) {\n        var _this = _super.call(this, dayGrid.el) || this;\n        _this.slicer = new DayGridSlicer();\n        _this.dayGrid = dayGrid;\n        return _this;\n    }\n    SimpleDayGrid.prototype.firstContext = function (context) {\n        context.calendar.registerInteractiveComponent(this, { el: this.dayGrid.el });\n    };\n    SimpleDayGrid.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.context.calendar.unregisterInteractiveComponent(this);\n    };\n    SimpleDayGrid.prototype.render = function (props, context) {\n        var dayGrid = this.dayGrid;\n        var dateProfile = props.dateProfile, dayTable = props.dayTable;\n        dayGrid.receiveProps(__assign({}, this.slicer.sliceProps(props, dateProfile, props.nextDayThreshold, context.calendar, dayGrid, dayTable), { dateProfile: dateProfile, cells: dayTable.cells, isRigid: props.isRigid }), context);\n    };\n    SimpleDayGrid.prototype.buildPositionCaches = function () {\n        this.dayGrid.buildPositionCaches();\n    };\n    SimpleDayGrid.prototype.queryHit = function (positionLeft, positionTop) {\n        var rawHit = this.dayGrid.positionToHit(positionLeft, positionTop);\n        if (rawHit) {\n            return {\n                component: this.dayGrid,\n                dateSpan: rawHit.dateSpan,\n                dayEl: rawHit.dayEl,\n                rect: {\n                    left: rawHit.relativeRect.left,\n                    right: rawHit.relativeRect.right,\n                    top: rawHit.relativeRect.top,\n                    bottom: rawHit.relativeRect.bottom\n                },\n                layer: 0\n            };\n        }\n    };\n    return SimpleDayGrid;\n}(DateComponent));\nvar DayGridSlicer = /** @class */ (function (_super) {\n    __extends(DayGridSlicer, _super);\n    function DayGridSlicer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DayGridSlicer.prototype.sliceRange = function (dateRange, dayTable) {\n        return dayTable.sliceRange(dateRange);\n    };\n    return DayGridSlicer;\n}(Slicer));\n\nvar DayGridView = /** @class */ (function (_super) {\n    __extends(DayGridView, _super);\n    function DayGridView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.buildDayTable = memoize(buildDayTable);\n        return _this;\n    }\n    DayGridView.prototype.render = function (props, context) {\n        _super.prototype.render.call(this, props, context); // will call _renderSkeleton/_unrenderSkeleton\n        var dateProfile = this.props.dateProfile;\n        var dayTable = this.dayTable =\n            this.buildDayTable(dateProfile, props.dateProfileGenerator);\n        if (this.header) {\n            this.header.receiveProps({\n                dateProfile: dateProfile,\n                dates: dayTable.headerDates,\n                datesRepDistinctDays: dayTable.rowCnt === 1,\n                renderIntroHtml: this.renderHeadIntroHtml\n            }, context);\n        }\n        this.simpleDayGrid.receiveProps({\n            dateProfile: dateProfile,\n            dayTable: dayTable,\n            businessHours: props.businessHours,\n            dateSelection: props.dateSelection,\n            eventStore: props.eventStore,\n            eventUiBases: props.eventUiBases,\n            eventSelection: props.eventSelection,\n            eventDrag: props.eventDrag,\n            eventResize: props.eventResize,\n            isRigid: this.hasRigidRows(),\n            nextDayThreshold: this.context.nextDayThreshold\n        }, context);\n    };\n    DayGridView.prototype._renderSkeleton = function (context) {\n        _super.prototype._renderSkeleton.call(this, context);\n        if (context.options.columnHeader) {\n            this.header = new DayHeader(this.el.querySelector('.fc-head-container'));\n        }\n        this.simpleDayGrid = new SimpleDayGrid(this.dayGrid);\n    };\n    DayGridView.prototype._unrenderSkeleton = function () {\n        _super.prototype._unrenderSkeleton.call(this);\n        if (this.header) {\n            this.header.destroy();\n        }\n        this.simpleDayGrid.destroy();\n    };\n    return DayGridView;\n}(AbstractDayGridView));\nfunction buildDayTable(dateProfile, dateProfileGenerator) {\n    var daySeries = new DaySeries(dateProfile.renderRange, dateProfileGenerator);\n    return new DayTable(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\n\nvar main = createPlugin({\n    defaultView: 'dayGridMonth',\n    views: {\n        dayGrid: DayGridView,\n        dayGridDay: {\n            type: 'dayGrid',\n            duration: { days: 1 }\n        },\n        dayGridWeek: {\n            type: 'dayGrid',\n            duration: { weeks: 1 }\n        },\n        dayGridMonth: {\n            type: 'dayGrid',\n            duration: { months: 1 },\n            monthMode: true,\n            fixedWeekCount: true\n        }\n    }\n});\n\nexport default main;\nexport { AbstractDayGridView, DayBgRow, DayGrid, DayGridSlicer, DayGridView, SimpleDayGrid, buildDayTable as buildBasicDayTable };\n"]},"metadata":{},"sourceType":"module"}