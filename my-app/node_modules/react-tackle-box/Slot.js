"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = createSlot;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _invariant = _interopRequireDefault(require("invariant"));

function createSlot() {
  var anchor = null;
  var instance = null;

  var set = function set(el) {
    anchor = el;
    instance && instance.forceUpdate();
  };

  var Outlet =
  /*#__PURE__*/
  function (_React$Component) {
    (0, _inheritsLoose2.default)(Outlet, _React$Component);

    function Outlet() {
      return _React$Component.apply(this, arguments) || this;
    }

    var _proto = Outlet.prototype;

    _proto.shouldComponentUpdate = function shouldComponentUpdate() {
      return false;
    };

    _proto.render = function render() {
      return _react.default.createElement("div", (0, _extends2.default)({
        ref: set
      }, this.props));
    };

    return Outlet;
  }(_react.default.Component);

  var Entry =
  /*#__PURE__*/
  function (_React$Component2) {
    (0, _inheritsLoose2.default)(Entry, _React$Component2);

    function Entry() {
      return _React$Component2.apply(this, arguments) || this;
    }

    var _proto2 = Entry.prototype;

    _proto2.componentDidMount = function componentDidMount() {
      !!instance ? process.env.NODE_ENV !== "production" ? (0, _invariant.default)(false, 'Only one Entry per slot can be rendered at a time.') : invariant(false) : void 0;
      instance = this;
    };

    _proto2.componentWillUnmount = function componentWillUnmount() {
      instance = null;
    };

    _proto2.render = function render() {
      var _this$props = this.props,
          children = _this$props.children,
          waitForOutlet = _this$props.waitForOutlet;
      var child = typeof children === 'function' ? children(!anchor) : children;
      if (anchor) return _reactDom.default.createPortal(child, anchor);
      return !waitForOutlet ? child : null;
    };

    return Entry;
  }(_react.default.Component);

  Entry.propTypes = {
    waitForOutlet: function waitForOutlet() {}
  };
  return {
    Entry: Entry,
    Outlet: Outlet
  };
}

module.exports = exports["default"];