function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import PropTypes from 'prop-types';
import React from 'react';
import { propTypes, defaultProps } from '../PropTypes';
import Block from './Block';
import Flex from './Flex';
import styles from './Layout.module.css';

function Layout(_ref, ref) {
  var display = _ref.display,
      props = _objectWithoutPropertiesLoose(_ref, ["display"]);

  if (display === 'block') return Block.render(props, ref);
  return Flex.render(props, ref);
}

var DecoratedLayout = React.forwardRef(Layout);
DecoratedLayout.propTypes = _extends({}, propTypes, {
  display: PropTypes.oneOf(['flex', 'block'])
});
DecoratedLayout.defaultProps = defaultProps;
DecoratedLayout.Flex = Flex;
DecoratedLayout.Block = Block;

DecoratedLayout.Spacer = function () {
  return React.createElement("div", {
    className: styles.spacer
  });
};

export default DecoratedLayout;